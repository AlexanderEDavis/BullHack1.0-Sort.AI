<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.Api.CommonProtos</name>
    </assembly>
    <members>
        <member name="T:Google.Api.AnnotationsReflection">
            <summary>Holder for reflection information generated from google/api/annotations.proto</summary>
        </member>
        <member name="P:Google.Api.AnnotationsReflection.Descriptor">
            <summary>File descriptor for google/api/annotations.proto</summary>
        </member>
        <member name="T:Google.Api.AuthReflection">
            <summary>Holder for reflection information generated from google/api/auth.proto</summary>
        </member>
        <member name="P:Google.Api.AuthReflection.Descriptor">
            <summary>File descriptor for google/api/auth.proto</summary>
        </member>
        <member name="T:Google.Api.Authentication">
             <summary>
              `Authentication` defines the authentication configuration for an API.
            
              Example for an API targeted for external use:
            
                  name: calendar.googleapis.com
                  authentication:
                    rules:
                    - selector: "*"
                      oauth:
                        canonical_scopes: https://www.googleapis.com/auth/calendar
            
                    - selector: google.calendar.Delegate
                      oauth:
                        canonical_scopes: https://www.googleapis.com/auth/calendar.read
             </summary>
        </member>
        <member name="F:Google.Api.Authentication.RulesFieldNumber">
            <summary>Field number for the "rules" field.</summary>
        </member>
        <member name="P:Google.Api.Authentication.Rules">
            <summary>
             Individual rules for authentication.
            </summary>
        </member>
        <member name="F:Google.Api.Authentication.ProvidersFieldNumber">
            <summary>Field number for the "providers" field.</summary>
        </member>
        <member name="P:Google.Api.Authentication.Providers">
            <summary>
             Defines a set of authentication providers that a service supports.
            </summary>
        </member>
        <member name="T:Google.Api.AuthenticationRule">
             <summary>
              Authentication rules for the service.
            
              By default, if a method has any authentication requirements, every request
              must include a valid credential matching one of the requirements.
              It's an error to include more than one kind of credential in a single
              request.
            
              If a method doesn't have any auth requirements, request credentials will be
              ignored.
             </summary>
        </member>
        <member name="F:Google.Api.AuthenticationRule.SelectorFieldNumber">
            <summary>Field number for the "selector" field.</summary>
        </member>
        <member name="P:Google.Api.AuthenticationRule.Selector">
             <summary>
              Selects the methods to which this rule applies.
            
              Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
             </summary>
        </member>
        <member name="F:Google.Api.AuthenticationRule.OauthFieldNumber">
            <summary>Field number for the "oauth" field.</summary>
        </member>
        <member name="P:Google.Api.AuthenticationRule.Oauth">
            <summary>
             The requirements for OAuth credentials.
            </summary>
        </member>
        <member name="F:Google.Api.AuthenticationRule.AllowWithoutCredentialFieldNumber">
            <summary>Field number for the "allow_without_credential" field.</summary>
        </member>
        <member name="P:Google.Api.AuthenticationRule.AllowWithoutCredential">
            <summary>
             Whether to allow requests without a credential.  If quota is enabled, an
             API key is required for such request to pass the quota check.
            </summary>
        </member>
        <member name="F:Google.Api.AuthenticationRule.RequirementsFieldNumber">
            <summary>Field number for the "requirements" field.</summary>
        </member>
        <member name="P:Google.Api.AuthenticationRule.Requirements">
            <summary>
             Requirements for additional authentication providers.
            </summary>
        </member>
        <member name="T:Google.Api.AuthProvider">
            <summary>
             Configuration for an anthentication provider, including support for
             [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
            </summary>
        </member>
        <member name="F:Google.Api.AuthProvider.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Google.Api.AuthProvider.Id">
             <summary>
              The unique identifier of the auth provider. It will be referred to by
              `AuthRequirement.provider_id`.
            
              Example: "bookstore_auth".
             </summary>
        </member>
        <member name="F:Google.Api.AuthProvider.IssuerFieldNumber">
            <summary>Field number for the "issuer" field.</summary>
        </member>
        <member name="P:Google.Api.AuthProvider.Issuer">
             <summary>
              Identifies the principal that issued the JWT. See
              https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.1
              Usually a URL or an email address.
            
              Example: https://securetoken.google.com
              Example: 1234567-compute@developer.gserviceaccount.com
             </summary>
        </member>
        <member name="F:Google.Api.AuthProvider.JwksUriFieldNumber">
            <summary>Field number for the "jwks_uri" field.</summary>
        </member>
        <member name="P:Google.Api.AuthProvider.JwksUri">
             <summary>
              URL of the provider's public key set to validate signature of the JWT. See
              [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
              Optional if the key set document:
               - can be retrieved from
                 [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html
                 of the issuer.
               - can be inferred from the email domain of the issuer (e.g. a Google service account).
            
              Example: https://www.googleapis.com/oauth2/v1/certs
             </summary>
        </member>
        <member name="T:Google.Api.OAuthRequirements">
             <summary>
              OAuth scopes are a way to define data and permissions on data. For example,
              there are scopes defined for "Read-only access to Google Calendar" and
              "Access to Cloud Platform". Users can consent to a scope for an application,
              giving it permission to access that data on their behalf.
            
              OAuth scope specifications should be fairly coarse grained; a user will need
              to see and understand the text description of what your scope means.
            
              In most cases: use one or at most two OAuth scopes for an entire family of
              products. If your product has multiple APIs, you should probably be sharing
              the OAuth scope across all of those APIs.
            
              When you need finer grained OAuth consent screens: talk with your product
              management about how developers will use them in practice.
            
              Please note that even though each of the canonical scopes is enough for a
              request to be accepted and passed to the backend, a request can still fail
              due to the backend requiring additional scopes or permissions.
             </summary>
        </member>
        <member name="F:Google.Api.OAuthRequirements.CanonicalScopesFieldNumber">
            <summary>Field number for the "canonical_scopes" field.</summary>
        </member>
        <member name="P:Google.Api.OAuthRequirements.CanonicalScopes">
             <summary>
              The list of publicly documented OAuth scopes that are allowed access. An
              OAuth token containing any of these scopes will be accepted.
            
              Example:
            
                   canonical_scopes: https://www.googleapis.com/auth/calendar,
                                     https://www.googleapis.com/auth/calendar.read
             </summary>
        </member>
        <member name="T:Google.Api.AuthRequirement">
            <summary>
             User-defined authentication requirements, including support for
             [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
            </summary>
        </member>
        <member name="F:Google.Api.AuthRequirement.ProviderIdFieldNumber">
            <summary>Field number for the "provider_id" field.</summary>
        </member>
        <member name="P:Google.Api.AuthRequirement.ProviderId">
             <summary>
              [id][google.api.AuthProvider.id] from authentication provider.
            
              Example:
            
                  provider_id: bookstore_auth
             </summary>
        </member>
        <member name="F:Google.Api.AuthRequirement.AudiencesFieldNumber">
            <summary>Field number for the "audiences" field.</summary>
        </member>
        <member name="P:Google.Api.AuthRequirement.Audiences">
             <summary>
              The list of JWT
              [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).
              that are allowed to access. A JWT containing any of these audiences will
              be accepted. When this setting is absent, only JWTs with audience
              "https://[Service_name][google.api.Service.name]/[API_name][google.protobuf.Api.name]"
              will be accepted. For example, if no audiences are in the setting,
              LibraryService API will only accept JWTs with the following audience
              "https://library-example.googleapis.com/google.example.library.v1.LibraryService".
            
              Example:
            
                  audiences: bookstore_android.apps.googleusercontent.com,
                             bookstore_web.apps.googleusercontent.com
             </summary>
        </member>
        <member name="T:Google.Api.BackendReflection">
            <summary>Holder for reflection information generated from google/api/backend.proto</summary>
        </member>
        <member name="P:Google.Api.BackendReflection.Descriptor">
            <summary>File descriptor for google/api/backend.proto</summary>
        </member>
        <member name="T:Google.Api.Backend">
            <summary>
             `Backend` defines the backend configuration for a service.
            </summary>
        </member>
        <member name="F:Google.Api.Backend.RulesFieldNumber">
            <summary>Field number for the "rules" field.</summary>
        </member>
        <member name="P:Google.Api.Backend.Rules">
            <summary>
             A list of backend rules providing configuration for individual API
             elements.
            </summary>
        </member>
        <member name="T:Google.Api.BackendRule">
            <summary>
             A backend rule provides configuration for an individual API element.
            </summary>
        </member>
        <member name="F:Google.Api.BackendRule.SelectorFieldNumber">
            <summary>Field number for the "selector" field.</summary>
        </member>
        <member name="P:Google.Api.BackendRule.Selector">
             <summary>
              Selects the methods to which this rule applies.
            
              Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
             </summary>
        </member>
        <member name="F:Google.Api.BackendRule.AddressFieldNumber">
            <summary>Field number for the "address" field.</summary>
        </member>
        <member name="P:Google.Api.BackendRule.Address">
            <summary>
             The address of the API backend.
            </summary>
        </member>
        <member name="F:Google.Api.BackendRule.DeadlineFieldNumber">
            <summary>Field number for the "deadline" field.</summary>
        </member>
        <member name="P:Google.Api.BackendRule.Deadline">
            <summary>
             The number of seconds to wait for a response from a request.  The
             default depends on the deployment context.
            </summary>
        </member>
        <member name="T:Google.Api.BillingReflection">
            <summary>Holder for reflection information generated from google/api/billing.proto</summary>
        </member>
        <member name="P:Google.Api.BillingReflection.Descriptor">
            <summary>File descriptor for google/api/billing.proto</summary>
        </member>
        <member name="T:Google.Api.Billing">
             <summary>
              Billing related configuration of the service.
            
              The following example shows how to configure metrics for billing:
            
                  metrics:
                  - name: library.googleapis.com/read_calls
                    metric_kind: DELTA
                    value_type: INT64
                  - name: library.googleapis.com/write_calls
                    metric_kind: DELTA
                    value_type: INT64
                  billing:
                    metrics:
                    - library.googleapis.com/read_calls
                    - library.googleapis.com/write_calls
            
              The next example shows how to enable billing status check and customize the
              check behavior. It makes sure billing status check is included in the `Check`
              method of [Service Control API](https://cloud.google.com/service-control/).
              In the example, "google.storage.Get" method can be served when the billing
              status is either `current` or `delinquent`, while "google.storage.Write"
              method can only be served when the billing status is `current`:
            
                  billing:
                    rules:
                    - selector: google.storage.Get
                      allowed_statuses:
                      - current
                      - delinquent
                    - selector: google.storage.Write
                      allowed_statuses: current
            
              Mostly services should only allow `current` status when serving requests.
              In addition, services can choose to allow both `current` and `delinquent`
              statuses when serving read-only requests to resources. If there's no
              matching selector for operation, no billing status check will be performed.
             </summary>
        </member>
        <member name="F:Google.Api.Billing.MetricsFieldNumber">
            <summary>Field number for the "metrics" field.</summary>
        </member>
        <member name="P:Google.Api.Billing.Metrics">
            <summary>
             Names of the metrics to report to billing. Each name must
             be defined in [Service.metrics][google.api.Service.metrics] section.
            </summary>
        </member>
        <member name="F:Google.Api.Billing.RulesFieldNumber">
            <summary>Field number for the "rules" field.</summary>
        </member>
        <member name="P:Google.Api.Billing.Rules">
            <summary>
             A list of billing status rules for configuring billing status check.
            </summary>
        </member>
        <member name="T:Google.Api.BillingStatusRule">
             <summary>
              Defines the billing status requirements for operations.
            
              When used with
              [Service Control API](https://cloud.google.com/service-control/), the
              following statuses are supported:
            
              - **current**: the associated billing account is up to date and capable of
                             paying for resource usages.
              - **delinquent**: the associated billing account has a correctable problem,
                                such as late payment.
            
              Mostly services should only allow `current` status when serving requests.
              In addition, services can choose to allow both `current` and `delinquent`
              statuses when serving read-only requests to resources. If the list of
              allowed_statuses is empty, it means no billing requirement.
             </summary>
        </member>
        <member name="F:Google.Api.BillingStatusRule.SelectorFieldNumber">
            <summary>Field number for the "selector" field.</summary>
        </member>
        <member name="P:Google.Api.BillingStatusRule.Selector">
            <summary>
             Selects the operation names to which this rule applies.
             Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
            </summary>
        </member>
        <member name="F:Google.Api.BillingStatusRule.AllowedStatusesFieldNumber">
            <summary>Field number for the "allowed_statuses" field.</summary>
        </member>
        <member name="P:Google.Api.BillingStatusRule.AllowedStatuses">
            <summary>
             Allowed billing statuses. The billing status check passes if the actual
             billing status matches any of the provided values here.
            </summary>
        </member>
        <member name="T:Google.Api.ConsumerReflection">
            <summary>Holder for reflection information generated from google/api/consumer.proto</summary>
        </member>
        <member name="P:Google.Api.ConsumerReflection.Descriptor">
            <summary>File descriptor for google/api/consumer.proto</summary>
        </member>
        <member name="T:Google.Api.ProjectProperties">
             <summary>
              A descriptor for defining project properties for a service. One service may
              have many consumer projects, and the service may want to behave differently
              depending on some properties on the project. For example, a project may be
              associated with a school, or a business, or a government agency, a business
              type property on the project may affect how a service responds to the client.
              This descriptor defines which properties are allowed to be set on a project.
            
              Example:
            
                 project_properties:
                   properties:
                   - name: NO_WATERMARK
                     type: BOOL
                     description: Allows usage of the API without watermarks.
                   - name: EXTENDED_TILE_CACHE_PERIOD
                     type: INT64
             </summary>
        </member>
        <member name="F:Google.Api.ProjectProperties.PropertiesFieldNumber">
            <summary>Field number for the "properties" field.</summary>
        </member>
        <member name="P:Google.Api.ProjectProperties.Properties">
            <summary>
             List of per consumer project-specific properties.
            </summary>
        </member>
        <member name="T:Google.Api.Property">
             <summary>
              Defines project properties.
            
              API services can define properties that can be assigned to consumer projects
              so that backends can perform response customization without having to make
              additional calls or maintain additional storage. For example, Maps API
              defines properties that controls map tile cache period, or whether to embed a
              watermark in a result.
            
              These values can be set via API producer console. Only API providers can
              define and set these properties.
             </summary>
        </member>
        <member name="F:Google.Api.Property.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Api.Property.Name">
            <summary>
             The name of the property (a.k.a key).
            </summary>
        </member>
        <member name="F:Google.Api.Property.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Google.Api.Property.Type">
            <summary>
             The type of this property.
            </summary>
        </member>
        <member name="F:Google.Api.Property.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Google.Api.Property.Description">
            <summary>
             The description of the property
            </summary>
        </member>
        <member name="T:Google.Api.Property.Types">
            <summary>Container for nested types declared in the Property message type.</summary>
        </member>
        <member name="T:Google.Api.Property.Types.PropertyType">
            <summary>
             Supported data type of the property values
            </summary>
        </member>
        <member name="F:Google.Api.Property.Types.PropertyType.Unspecified">
            <summary>
             The type is unspecified, and will result in an error.
            </summary>
        </member>
        <member name="F:Google.Api.Property.Types.PropertyType.Int64">
            <summary>
             The type is `int64`.
            </summary>
        </member>
        <member name="F:Google.Api.Property.Types.PropertyType.Bool">
            <summary>
             The type is `bool`.
            </summary>
        </member>
        <member name="F:Google.Api.Property.Types.PropertyType.String">
            <summary>
             The type is `string`.
            </summary>
        </member>
        <member name="F:Google.Api.Property.Types.PropertyType.Double">
            <summary>
             The type is 'double'.
            </summary>
        </member>
        <member name="T:Google.Api.ContextReflection">
            <summary>Holder for reflection information generated from google/api/context.proto</summary>
        </member>
        <member name="P:Google.Api.ContextReflection.Descriptor">
            <summary>File descriptor for google/api/context.proto</summary>
        </member>
        <member name="T:Google.Api.Context">
             <summary>
              `Context` defines which contexts an API requests.
            
              Example:
            
                  context:
                    rules:
                    - selector: "*"
                      requested:
                      - google.rpc.context.ProjectContext
                      - google.rpc.context.OriginContext
            
              The above specifies that all methods in the API request
              `google.rpc.context.ProjectContext` and
              `google.rpc.context.OriginContext`.
            
              Available context types are defined in package
              `google.rpc.context`.
             </summary>
        </member>
        <member name="F:Google.Api.Context.RulesFieldNumber">
            <summary>Field number for the "rules" field.</summary>
        </member>
        <member name="P:Google.Api.Context.Rules">
            <summary>
             List of rules for context, applicable to methods.
            </summary>
        </member>
        <member name="T:Google.Api.ContextRule">
            <summary>
             A context rule provides information about the context for an individual API
             element.
            </summary>
        </member>
        <member name="F:Google.Api.ContextRule.SelectorFieldNumber">
            <summary>Field number for the "selector" field.</summary>
        </member>
        <member name="P:Google.Api.ContextRule.Selector">
             <summary>
              Selects the methods to which this rule applies.
            
              Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
             </summary>
        </member>
        <member name="F:Google.Api.ContextRule.RequestedFieldNumber">
            <summary>Field number for the "requested" field.</summary>
        </member>
        <member name="P:Google.Api.ContextRule.Requested">
            <summary>
             A list of full type names of requested contexts.
            </summary>
        </member>
        <member name="F:Google.Api.ContextRule.ProvidedFieldNumber">
            <summary>Field number for the "provided" field.</summary>
        </member>
        <member name="P:Google.Api.ContextRule.Provided">
            <summary>
             A list of full type names of provided contexts.
            </summary>
        </member>
        <member name="T:Google.Api.ControlReflection">
            <summary>Holder for reflection information generated from google/api/control.proto</summary>
        </member>
        <member name="P:Google.Api.ControlReflection.Descriptor">
            <summary>File descriptor for google/api/control.proto</summary>
        </member>
        <member name="T:Google.Api.Control">
            <summary>
             Selects and configures the service controller used by the service.  The
             service controller handles features like abuse, quota, billing, logging,
             monitoring, etc.
            </summary>
        </member>
        <member name="F:Google.Api.Control.EnvironmentFieldNumber">
            <summary>Field number for the "environment" field.</summary>
        </member>
        <member name="P:Google.Api.Control.Environment">
            <summary>
             The service control environment to use. If empty, no control plane
             feature (like quota and billing) will be enabled.
            </summary>
        </member>
        <member name="T:Google.Api.DocumentationReflection">
            <summary>Holder for reflection information generated from google/api/documentation.proto</summary>
        </member>
        <member name="P:Google.Api.DocumentationReflection.Descriptor">
            <summary>File descriptor for google/api/documentation.proto</summary>
        </member>
        <member name="T:Google.Api.Documentation">
             <summary>
              `Documentation` provides the information for describing a service.
            
              Example:
              &lt;pre>&lt;code>documentation:
                summary: >
                  The Google Calendar API gives access
                  to most calendar features.
                pages:
                - name: Overview
                  content: &amp;#40;== include google/foo/overview.md ==&amp;#41;
                - name: Tutorial
                  content: &amp;#40;== include google/foo/tutorial.md ==&amp;#41;
                  subpages;
                  - name: Java
                    content: &amp;#40;== include google/foo/tutorial_java.md ==&amp;#41;
                rules:
                - selector: google.calendar.Calendar.Get
                  description: >
                    ...
                - selector: google.calendar.Calendar.Put
                  description: >
                    ...
              &lt;/code>&lt;/pre>
              Documentation is provided in markdown syntax. In addition to
              standard markdown features, definition lists, tables and fenced
              code blocks are supported. Section headers can be provided and are
              interpreted relative to the section nesting of the context where
              a documentation fragment is embedded.
            
              Documentation from the IDL is merged with documentation defined
              via the config at normalization time, where documentation provided
              by config rules overrides IDL provided.
            
              A number of constructs specific to the API platform are supported
              in documentation text.
            
              In order to reference a proto element, the following
              notation can be used:
              &lt;pre>&lt;code>&amp;#91;fully.qualified.proto.name]&amp;#91;]&lt;/code>&lt;/pre>
              To override the display text used for the link, this can be used:
              &lt;pre>&lt;code>&amp;#91;display text]&amp;#91;fully.qualified.proto.name]&lt;/code>&lt;/pre>
              Text can be excluded from doc using the following notation:
              &lt;pre>&lt;code>&amp;#40;-- internal comment --&amp;#41;&lt;/code>&lt;/pre>
              Comments can be made conditional using a visibility label. The below
              text will be only rendered if the `BETA` label is available:
              &lt;pre>&lt;code>&amp;#40;--BETA: comment for BETA users --&amp;#41;&lt;/code>&lt;/pre>
              A few directives are available in documentation. Note that
              directives must appear on a single line to be properly
              identified. The `include` directive includes a markdown file from
              an external source:
              &lt;pre>&lt;code>&amp;#40;== include path/to/file ==&amp;#41;&lt;/code>&lt;/pre>
              The `resource_for` directive marks a message to be the resource of
              a collection in REST view. If it is not specified, tools attempt
              to infer the resource from the operations in a collection:
              &lt;pre>&lt;code>&amp;#40;== resource_for v1.shelves.books ==&amp;#41;&lt;/code>&lt;/pre>
              The directive `suppress_warning` does not directly affect documentation
              and is documented together with service config validation.
             </summary>
        </member>
        <member name="F:Google.Api.Documentation.SummaryFieldNumber">
            <summary>Field number for the "summary" field.</summary>
        </member>
        <member name="P:Google.Api.Documentation.Summary">
            <summary>
             A short summary of what the service does. Can only be provided by
             plain text.
            </summary>
        </member>
        <member name="F:Google.Api.Documentation.PagesFieldNumber">
            <summary>Field number for the "pages" field.</summary>
        </member>
        <member name="P:Google.Api.Documentation.Pages">
            <summary>
             The top level pages for the documentation set.
            </summary>
        </member>
        <member name="F:Google.Api.Documentation.RulesFieldNumber">
            <summary>Field number for the "rules" field.</summary>
        </member>
        <member name="P:Google.Api.Documentation.Rules">
            <summary>
             Documentation rules for individual elements of the service.
            </summary>
        </member>
        <member name="F:Google.Api.Documentation.DocumentationRootUrlFieldNumber">
            <summary>Field number for the "documentation_root_url" field.</summary>
        </member>
        <member name="P:Google.Api.Documentation.DocumentationRootUrl">
            <summary>
             The URL to the root of documentation.
            </summary>
        </member>
        <member name="F:Google.Api.Documentation.OverviewFieldNumber">
            <summary>Field number for the "overview" field.</summary>
        </member>
        <member name="P:Google.Api.Documentation.Overview">
            <summary>
             Declares a single overview page. For example:
             &lt;pre>&lt;code>documentation:
               summary: ...
               overview: &amp;#40;== include overview.md ==&amp;#41;
             &lt;/code>&lt;/pre>
             This is a shortcut for the following declaration (using pages style):
             &lt;pre>&lt;code>documentation:
               summary: ...
               pages:
               - name: Overview
                 content: &amp;#40;== include overview.md ==&amp;#41;
             &lt;/code>&lt;/pre>
             Note: you cannot specify both `overview` field and `pages` field.
            </summary>
        </member>
        <member name="T:Google.Api.DocumentationRule">
            <summary>
             A documentation rule provides information about individual API elements.
            </summary>
        </member>
        <member name="F:Google.Api.DocumentationRule.SelectorFieldNumber">
            <summary>Field number for the "selector" field.</summary>
        </member>
        <member name="P:Google.Api.DocumentationRule.Selector">
            <summary>
             The selector is a comma-separated list of patterns. Each pattern is a
             qualified name of the element which may end in "*", indicating a wildcard.
             Wildcards are only allowed at the end and for a whole component of the
             qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". To
             specify a default for all applicable elements, the whole pattern "*"
             is used.
            </summary>
        </member>
        <member name="F:Google.Api.DocumentationRule.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Google.Api.DocumentationRule.Description">
            <summary>
             Description of the selected API(s).
            </summary>
        </member>
        <member name="F:Google.Api.DocumentationRule.DeprecationDescriptionFieldNumber">
            <summary>Field number for the "deprecation_description" field.</summary>
        </member>
        <member name="P:Google.Api.DocumentationRule.DeprecationDescription">
            <summary>
             Deprecation description of the selected element(s). It can be provided if an
             element is marked as `deprecated`.
            </summary>
        </member>
        <member name="T:Google.Api.Page">
            <summary>
             Represents a documentation page. A page can contain subpages to represent
             nested documentation set structure.
            </summary>
        </member>
        <member name="F:Google.Api.Page.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Api.Page.Name">
            <summary>
             The name of the page. It will be used as an identity of the page to
             generate URI of the page, text of the link to this page in navigation,
             etc. The full page name (start from the root page name to this page
             concatenated with `.`) can be used as reference to the page in your
             documentation. For example:
             &lt;pre>&lt;code>pages:
             - name: Tutorial
               content: &amp;#40;== include tutorial.md ==&amp;#41;
               subpages:
               - name: Java
                 content: &amp;#40;== include tutorial_java.md ==&amp;#41;
             &lt;/code>&lt;/pre>
             You can reference `Java` page using Markdown reference link syntax:
             `[Java][Tutorial.Java]`.
            </summary>
        </member>
        <member name="F:Google.Api.Page.ContentFieldNumber">
            <summary>Field number for the "content" field.</summary>
        </member>
        <member name="P:Google.Api.Page.Content">
            <summary>
             The Markdown content of the page. You can use &lt;code>&amp;#40;== include {path} ==&amp;#41;&lt;/code>
             to include content from a Markdown file.
            </summary>
        </member>
        <member name="F:Google.Api.Page.SubpagesFieldNumber">
            <summary>Field number for the "subpages" field.</summary>
        </member>
        <member name="P:Google.Api.Page.Subpages">
            <summary>
             Subpages of this page. The order of subpages specified here will be
             honored in the generated docset.
            </summary>
        </member>
        <member name="T:Google.Api.HttpReflection">
            <summary>Holder for reflection information generated from google/api/http.proto</summary>
        </member>
        <member name="P:Google.Api.HttpReflection.Descriptor">
            <summary>File descriptor for google/api/http.proto</summary>
        </member>
        <member name="T:Google.Api.Http">
            <summary>
             Defines the HTTP configuration for a service. It contains a list of
             [HttpRule][google.api.HttpRule], each specifying the mapping of an RPC method
             to one or more HTTP REST API methods.
            </summary>
        </member>
        <member name="F:Google.Api.Http.RulesFieldNumber">
            <summary>Field number for the "rules" field.</summary>
        </member>
        <member name="P:Google.Api.Http.Rules">
            <summary>
             A list of HTTP rules for configuring the HTTP REST API methods.
            </summary>
        </member>
        <member name="T:Google.Api.HttpRule">
             <summary>
              `HttpRule` defines the mapping of an RPC method to one or more HTTP
              REST APIs.  The mapping determines what portions of the request
              message are populated from the path, query parameters, or body of
              the HTTP request.  The mapping is typically specified as an
              `google.api.http` annotation, see "google/api/annotations.proto"
              for details.
            
              The mapping consists of a field specifying the path template and
              method kind.  The path template can refer to fields in the request
              message, as in the example below which describes a REST GET
              operation on a resource collection of messages:
            
              ```proto
              service Messaging {
                rpc GetMessage(GetMessageRequest) returns (Message) {
                  option (google.api.http).get = "/v1/messages/{message_id}/{sub.subfield}";
                }
              }
              message GetMessageRequest {
                message SubMessage {
                  string subfield = 1;
                }
                string message_id = 1; // mapped to the URL
                SubMessage sub = 2;    // `sub.subfield` is url-mapped
              }
              message Message {
                string text = 1; // content of the resource
              }
              ```
            
              This definition enables an automatic, bidrectional mapping of HTTP
              JSON to RPC. Example:
            
              HTTP | RPC
              -----|-----
              `GET /v1/messages/123456/foo`  | `GetMessage(message_id: "123456" sub: SubMessage(subfield: "foo"))`
            
              In general, not only fields but also field paths can be referenced
              from a path pattern. Fields mapped to the path pattern cannot be
              repeated and must have a primitive (non-message) type.
            
              Any fields in the request message which are not bound by the path
              pattern automatically become (optional) HTTP query
              parameters. Assume the following definition of the request message:
            
              ```proto
              message GetMessageRequest {
                message SubMessage {
                  string subfield = 1;
                }
                string message_id = 1; // mapped to the URL
                int64 revision = 2;    // becomes a parameter
                SubMessage sub = 3;    // `sub.subfield` becomes a parameter
              }
              ```
            
              This enables a HTTP JSON to RPC mapping as below:
            
              HTTP | RPC
              -----|-----
              `GET /v1/messages/123456?revision=2&amp;sub.subfield=foo` | `GetMessage(message_id: "123456" revision: 2 sub: SubMessage(subfield: "foo"))`
            
              Note that fields which are mapped to HTTP parameters must have a
              primitive type or a repeated primitive type. Message types are not
              allowed. In the case of a repeated type, the parameter can be
              repeated in the URL, as in `...?param=A&amp;param=B`.
            
              For HTTP method kinds which allow a request body, the `body` field
              specifies the mapping. Consider a REST update method on the
              message resource collection:
            
              ```proto
              service Messaging {
                rpc UpdateMessage(UpdateMessageRequest) returns (Message) {
                  option (google.api.http) = {
                    put: "/v1/messages/{message_id}"
                    body: "message"
                  };
                }
              }
              message UpdateMessageRequest {
                string message_id = 1; // mapped to the URL
                Message message = 2;   // mapped to the body
              }
              ```
            
              The following HTTP JSON to RPC mapping is enabled, where the
              representation of the JSON in the request body is determined by
              protos JSON encoding:
            
              HTTP | RPC
              -----|-----
              `PUT /v1/messages/123456 { "text": "Hi!" }` | `UpdateMessage(message_id: "123456" message { text: "Hi!" })`
            
              The special name `*` can be used in the body mapping to define that
              every field not bound by the path template should be mapped to the
              request body.  This enables the following alternative definition of
              the update method:
            
              ```proto
              service Messaging {
                rpc UpdateMessage(Message) returns (Message) {
                  option (google.api.http) = {
                    put: "/v1/messages/{message_id}"
                    body: "*"
                  };
                }
              }
              message Message {
                string message_id = 1;
                string text = 2;
              }
              ```
            
              The following HTTP JSON to RPC mapping is enabled:
            
              HTTP | RPC
              -----|-----
              `PUT /v1/messages/123456 { "text": "Hi!" }` | `UpdateMessage(message_id: "123456" text: "Hi!")`
            
              Note that when using `*` in the body mapping, it is not possible to
              have HTTP parameters, as all fields not bound by the path end in
              the body. This makes this option more rarely used in practice of
              defining REST APIs. The common usage of `*` is in custom methods
              which don't use the URL at all for transferring data.
            
              It is possible to define multiple HTTP methods for one RPC by using
              the `additional_bindings` option. Example:
            
              ```proto
              service Messaging {
                rpc GetMessage(GetMessageRequest) returns (Message) {
                  option (google.api.http) = {
                    get: "/v1/messages/{message_id}"
                    additional_bindings {
                      get: "/v1/users/{user_id}/messages/{message_id}"
                    }
                  };
                }
              }
              message GetMessageRequest {
                string message_id = 1;
                string user_id = 2;
              }
              ```
            
              This enables the following two alternative HTTP JSON to RPC
              mappings:
            
              HTTP | RPC
              -----|-----
              `GET /v1/messages/123456` | `GetMessage(message_id: "123456")`
              `GET /v1/users/me/messages/123456` | `GetMessage(user_id: "me" message_id: "123456")`
            
              # Rules for HTTP mapping
            
              The rules for mapping HTTP path, query parameters, and body fields
              to the request message are as follows:
            
              1. The `body` field specifies either `*` or a field path, or is
                 omitted. If omitted, it assumes there is no HTTP body.
              2. Leaf fields (recursive expansion of nested messages in the
                 request) can be classified into three types:
                  (a) Matched in the URL template.
                  (b) Covered by body (if body is `*`, everything except (a) fields;
                      else everything under the body field)
                  (c) All other fields.
              3. URL query parameters found in the HTTP request are mapped to (c) fields.
              4. Any body sent with an HTTP request can contain only (b) fields.
            
              The syntax of the path template is as follows:
            
                  Template = "/" Segments [ Verb ] ;
                  Segments = Segment { "/" Segment } ;
                  Segment  = "*" | "**" | LITERAL | Variable ;
                  Variable = "{" FieldPath [ "=" Segments ] "}" ;
                  FieldPath = IDENT { "." IDENT } ;
                  Verb     = ":" LITERAL ;
            
              The syntax `*` matches a single path segment. It follows the semantics of
              [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String
              Expansion.
            
              The syntax `**` matches zero or more path segments. It follows the semantics
              of [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.3 Reserved
              Expansion.
            
              The syntax `LITERAL` matches literal text in the URL path.
            
              The syntax `Variable` matches the entire path as specified by its template;
              this nested template must not contain further variables. If a variable
              matches a single path segment, its template may be omitted, e.g. `{var}`
              is equivalent to `{var=*}`.
            
              NOTE: the field paths in variables and in the `body` must not refer to
              repeated fields or map fields.
            
              Use CustomHttpPattern to specify any HTTP method that is not included in the
              `pattern` field, such as HEAD, or "*" to leave the HTTP method unspecified for
              a given URL path rule. The wild-card rule is useful for services that provide
              content to Web (HTML) clients.
             </summary>
        </member>
        <member name="F:Google.Api.HttpRule.SelectorFieldNumber">
            <summary>Field number for the "selector" field.</summary>
        </member>
        <member name="P:Google.Api.HttpRule.Selector">
             <summary>
              Selects methods to which this rule applies.
            
              Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
             </summary>
        </member>
        <member name="F:Google.Api.HttpRule.GetFieldNumber">
            <summary>Field number for the "get" field.</summary>
        </member>
        <member name="P:Google.Api.HttpRule.Get">
            <summary>
             Used for listing and getting information about resources.
            </summary>
        </member>
        <member name="F:Google.Api.HttpRule.PutFieldNumber">
            <summary>Field number for the "put" field.</summary>
        </member>
        <member name="P:Google.Api.HttpRule.Put">
            <summary>
             Used for updating a resource.
            </summary>
        </member>
        <member name="F:Google.Api.HttpRule.PostFieldNumber">
            <summary>Field number for the "post" field.</summary>
        </member>
        <member name="P:Google.Api.HttpRule.Post">
            <summary>
             Used for creating a resource.
            </summary>
        </member>
        <member name="F:Google.Api.HttpRule.DeleteFieldNumber">
            <summary>Field number for the "delete" field.</summary>
        </member>
        <member name="P:Google.Api.HttpRule.Delete">
            <summary>
             Used for deleting a resource.
            </summary>
        </member>
        <member name="F:Google.Api.HttpRule.PatchFieldNumber">
            <summary>Field number for the "patch" field.</summary>
        </member>
        <member name="P:Google.Api.HttpRule.Patch">
            <summary>
             Used for updating a resource.
            </summary>
        </member>
        <member name="F:Google.Api.HttpRule.CustomFieldNumber">
            <summary>Field number for the "custom" field.</summary>
        </member>
        <member name="P:Google.Api.HttpRule.Custom">
            <summary>
             Custom pattern is used for defining custom verbs.
            </summary>
        </member>
        <member name="F:Google.Api.HttpRule.BodyFieldNumber">
            <summary>Field number for the "body" field.</summary>
        </member>
        <member name="P:Google.Api.HttpRule.Body">
            <summary>
             The name of the request field whose value is mapped to the HTTP body, or
             `*` for mapping all fields not captured by the path pattern to the HTTP
             body. NOTE: the referred field must not be a repeated field.
            </summary>
        </member>
        <member name="F:Google.Api.HttpRule.AdditionalBindingsFieldNumber">
            <summary>Field number for the "additional_bindings" field.</summary>
        </member>
        <member name="P:Google.Api.HttpRule.AdditionalBindings">
            <summary>
             Additional HTTP bindings for the selector. Nested bindings must
             not contain an `additional_bindings` field themselves (that is,
             the nesting may only be one level deep).
            </summary>
        </member>
        <member name="T:Google.Api.HttpRule.PatternOneofCase">
            <summary>Enum of possible cases for the "pattern" oneof.</summary>
        </member>
        <member name="T:Google.Api.CustomHttpPattern">
            <summary>
             A custom pattern is used for defining custom HTTP verb.
            </summary>
        </member>
        <member name="F:Google.Api.CustomHttpPattern.KindFieldNumber">
            <summary>Field number for the "kind" field.</summary>
        </member>
        <member name="P:Google.Api.CustomHttpPattern.Kind">
            <summary>
             The name of this custom HTTP verb.
            </summary>
        </member>
        <member name="F:Google.Api.CustomHttpPattern.PathFieldNumber">
            <summary>Field number for the "path" field.</summary>
        </member>
        <member name="P:Google.Api.CustomHttpPattern.Path">
            <summary>
             The path matched by this custom verb.
            </summary>
        </member>
        <member name="T:Google.Api.LabelReflection">
            <summary>Holder for reflection information generated from google/api/label.proto</summary>
        </member>
        <member name="P:Google.Api.LabelReflection.Descriptor">
            <summary>File descriptor for google/api/label.proto</summary>
        </member>
        <member name="T:Google.Api.LabelDescriptor">
            <summary>
             A description of a label.
            </summary>
        </member>
        <member name="F:Google.Api.LabelDescriptor.KeyFieldNumber">
            <summary>Field number for the "key" field.</summary>
        </member>
        <member name="P:Google.Api.LabelDescriptor.Key">
            <summary>
             The label key.
            </summary>
        </member>
        <member name="F:Google.Api.LabelDescriptor.ValueTypeFieldNumber">
            <summary>Field number for the "value_type" field.</summary>
        </member>
        <member name="P:Google.Api.LabelDescriptor.ValueType">
            <summary>
             The type of data that can be assigned to the label.
            </summary>
        </member>
        <member name="F:Google.Api.LabelDescriptor.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Google.Api.LabelDescriptor.Description">
            <summary>
             A human-readable description for the label.
            </summary>
        </member>
        <member name="T:Google.Api.LabelDescriptor.Types">
            <summary>Container for nested types declared in the LabelDescriptor message type.</summary>
        </member>
        <member name="T:Google.Api.LabelDescriptor.Types.ValueType">
            <summary>
             Value types that can be used as label values.
            </summary>
        </member>
        <member name="F:Google.Api.LabelDescriptor.Types.ValueType.String">
            <summary>
             A variable-length string. This is the default.
            </summary>
        </member>
        <member name="F:Google.Api.LabelDescriptor.Types.ValueType.Bool">
            <summary>
             Boolean; true or false.
            </summary>
        </member>
        <member name="F:Google.Api.LabelDescriptor.Types.ValueType.Int64">
            <summary>
             A 64-bit signed integer.
            </summary>
        </member>
        <member name="T:Google.Api.LogReflection">
            <summary>Holder for reflection information generated from google/api/log.proto</summary>
        </member>
        <member name="P:Google.Api.LogReflection.Descriptor">
            <summary>File descriptor for google/api/log.proto</summary>
        </member>
        <member name="T:Google.Api.LogDescriptor">
             <summary>
              A description of a log type. Example in YAML format:
            
                  - name: library.googleapis.com/activity_history
                    description: The history of borrowing and returning library items.
                    display_name: Activity
                    labels:
                    - key: /customer_id
                      description: Identifier of a library customer
             </summary>
        </member>
        <member name="F:Google.Api.LogDescriptor.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Api.LogDescriptor.Name">
            <summary>
             The name of the log. It must be less than 512 characters long and can
             include the following characters: upper- and lower-case alphanumeric
             characters [A-Za-z0-9], and punctuation characters including
             slash, underscore, hyphen, period [/_-.].
            </summary>
        </member>
        <member name="F:Google.Api.LogDescriptor.LabelsFieldNumber">
            <summary>Field number for the "labels" field.</summary>
        </member>
        <member name="P:Google.Api.LogDescriptor.Labels">
            <summary>
             The set of labels that are available to describe a specific log entry.
             Runtime requests that contain labels not specified here are
             considered invalid.
            </summary>
        </member>
        <member name="F:Google.Api.LogDescriptor.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Google.Api.LogDescriptor.Description">
            <summary>
             A human-readable description of this log. This information appears in
             the documentation and can contain details.
            </summary>
        </member>
        <member name="F:Google.Api.LogDescriptor.DisplayNameFieldNumber">
            <summary>Field number for the "display_name" field.</summary>
        </member>
        <member name="P:Google.Api.LogDescriptor.DisplayName">
            <summary>
             The human-readable name for this log. This information appears on
             the user interface and should be concise.
            </summary>
        </member>
        <member name="T:Google.Api.LoggingReflection">
            <summary>Holder for reflection information generated from google/api/logging.proto</summary>
        </member>
        <member name="P:Google.Api.LoggingReflection.Descriptor">
            <summary>File descriptor for google/api/logging.proto</summary>
        </member>
        <member name="T:Google.Api.Logging">
             <summary>
              Logging configuration of the service.
            
              The following example shows how to configure logs to be sent to the
              producer and consumer projects. In the example,
              the `library.googleapis.com/activity_history` log is
              sent to both the producer and consumer projects, whereas
              the `library.googleapis.com/purchase_history` log is only sent to the
              producer project:
            
                  monitored_resources:
                  - type: library.googleapis.com/branch
                    labels:
                    - key: /city
                      description: The city where the library branch is located in.
                    - key: /name
                      description: The name of the branch.
                  logs:
                  - name: library.googleapis.com/activity_history
                    labels:
                    - key: /customer_id
                  - name: library.googleapis.com/purchase_history
                  logging:
                    producer_destinations:
                    - monitored_resource: library.googleapis.com/branch
                      logs:
                      - library.googleapis.com/activity_history
                      - library.googleapis.com/purchase_history
                    consumer_destinations:
                    - monitored_resource: library.googleapis.com/branch
                      logs:
                      - library.googleapis.com/activity_history
             </summary>
        </member>
        <member name="F:Google.Api.Logging.ProducerDestinationsFieldNumber">
            <summary>Field number for the "producer_destinations" field.</summary>
        </member>
        <member name="P:Google.Api.Logging.ProducerDestinations">
            <summary>
             Logging configurations for sending logs to the producer project.
             There can be multiple producer destinations, each one must have a
             different monitored resource type. A log can be used in at most
             one producer destination.
            </summary>
        </member>
        <member name="F:Google.Api.Logging.ConsumerDestinationsFieldNumber">
            <summary>Field number for the "consumer_destinations" field.</summary>
        </member>
        <member name="P:Google.Api.Logging.ConsumerDestinations">
            <summary>
             Logging configurations for sending logs to the consumer project.
             There can be multiple consumer destinations, each one must have a
             different monitored resource type. A log can be used in at most
             one consumer destination.
            </summary>
        </member>
        <member name="T:Google.Api.Logging.Types">
            <summary>Container for nested types declared in the Logging message type.</summary>
        </member>
        <member name="T:Google.Api.Logging.Types.LoggingDestination">
            <summary>
             Configuration of a specific logging destination (the producer project
             or the consumer project).
            </summary>
        </member>
        <member name="F:Google.Api.Logging.Types.LoggingDestination.MonitoredResourceFieldNumber">
            <summary>Field number for the "monitored_resource" field.</summary>
        </member>
        <member name="P:Google.Api.Logging.Types.LoggingDestination.MonitoredResource">
            <summary>
             The monitored resource type. The type must be defined in
             [Service.monitored_resources][google.api.Service.monitored_resources] section.
            </summary>
        </member>
        <member name="F:Google.Api.Logging.Types.LoggingDestination.LogsFieldNumber">
            <summary>Field number for the "logs" field.</summary>
        </member>
        <member name="P:Google.Api.Logging.Types.LoggingDestination.Logs">
            <summary>
             Names of the logs to be sent to this destination. Each name must
             be defined in the [Service.logs][google.api.Service.logs] section.
            </summary>
        </member>
        <member name="T:Google.Api.MetricReflection">
            <summary>Holder for reflection information generated from google/api/metric.proto</summary>
        </member>
        <member name="P:Google.Api.MetricReflection.Descriptor">
            <summary>File descriptor for google/api/metric.proto</summary>
        </member>
        <member name="T:Google.Api.MetricDescriptor">
            <summary>
             Defines a metric type and its schema.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Api.MetricDescriptor.Name">
             <summary>
              Resource name. The format of the name may vary between different
              implementations. For examples:
            
                  projects/{project_id}/metricDescriptors/{type=**}
                  metricDescriptors/{type=**}
             </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Google.Api.MetricDescriptor.Type">
             <summary>
              The metric type including a DNS name prefix, for example
              `"compute.googleapis.com/instance/cpu/utilization"`. Metric types
              should use a natural hierarchical grouping such as the following:
            
                  compute.googleapis.com/instance/cpu/utilization
                  compute.googleapis.com/instance/disk/read_ops_count
                  compute.googleapis.com/instance/network/received_bytes_count
            
              Note that if the metric type changes, the monitoring data will be
              discontinued, and anything depends on it will break, such as monitoring
              dashboards, alerting rules and quota limits. Therefore, once a metric has
              been published, its type should be immutable.
             </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.LabelsFieldNumber">
            <summary>Field number for the "labels" field.</summary>
        </member>
        <member name="P:Google.Api.MetricDescriptor.Labels">
            <summary>
             The set of labels that can be used to describe a specific instance of this
             metric type. For example, the
             `compute.googleapis.com/instance/network/received_bytes_count` metric type
             has a label, `loadbalanced`, that specifies whether the traffic was
             received through a load balanced IP address.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.MetricKindFieldNumber">
            <summary>Field number for the "metric_kind" field.</summary>
        </member>
        <member name="P:Google.Api.MetricDescriptor.MetricKind">
            <summary>
             Whether the metric records instantaneous values, changes to a value, etc.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.ValueTypeFieldNumber">
            <summary>Field number for the "value_type" field.</summary>
        </member>
        <member name="P:Google.Api.MetricDescriptor.ValueType">
            <summary>
             Whether the measurement is an integer, a floating-point number, etc.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.UnitFieldNumber">
            <summary>Field number for the "unit" field.</summary>
        </member>
        <member name="P:Google.Api.MetricDescriptor.Unit">
             <summary>
              The unit in which the metric value is reported. It is only applicable
              if the `value_type` is `INT64`, `DOUBLE`, or `DISTRIBUTION`. The
              supported units are a subset of [The Unified Code for Units of
              Measure](http://unitsofmeasure.org/ucum.html) standard:
            
              **Basic units (UNIT)**
            
              * `bit`   bit
              * `By`    byte
              * `s`     second
              * `min`   minute
              * `h`     hour
              * `d`     day
            
              **Prefixes (PREFIX)**
            
              * `k`     kilo    (10**3)
              * `M`     mega    (10**6)
              * `G`     giga    (10**9)
              * `T`     tera    (10**12)
              * `P`     peta    (10**15)
              * `E`     exa     (10**18)
              * `Z`     zetta   (10**21)
              * `Y`     yotta   (10**24)
              * `m`     milli   (10**-3)
              * `u`     micro   (10**-6)
              * `n`     nano    (10**-9)
              * `p`     pico    (10**-12)
              * `f`     femto   (10**-15)
              * `a`     atto    (10**-18)
              * `z`     zepto   (10**-21)
              * `y`     yocto   (10**-24)
              * `Ki`    kibi    (2**10)
              * `Mi`    mebi    (2**20)
              * `Gi`    gibi    (2**30)
              * `Ti`    tebi    (2**40)
            
              **Grammar**
            
              The grammar includes the dimensionless unit `1`, such as `1/s`.
            
              The grammar also includes these connectors:
            
              * `/`    division (as an infix operator, e.g. `1/s`).
              * `.`    multiplication (as an infix operator, e.g. `GBy.d`)
            
              The grammar for a unit is as follows:
            
                  Expression = Component { "." Component } { "/" Component } ;
            
                  Component = [ PREFIX ] UNIT [ Annotation ]
                            | Annotation
                            | "1"
                            ;
            
                  Annotation = "{" NAME "}" ;
            
              Notes:
            
              * `Annotation` is just a comment if it follows a `UNIT` and is
                 equivalent to `1` if it is used alone. For examples,
                 `{requests}/s == 1/s`, `By{transmitted}/s == By/s`.
              * `NAME` is a sequence of non-blank printable ASCII characters not
                 containing '{' or '}'.
             </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Google.Api.MetricDescriptor.Description">
            <summary>
             A detailed description of the metric, which can be used in documentation.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.DisplayNameFieldNumber">
            <summary>Field number for the "display_name" field.</summary>
        </member>
        <member name="P:Google.Api.MetricDescriptor.DisplayName">
            <summary>
             A concise name for the metric, which can be displayed in user interfaces.
             Use sentence case without an ending period, for example "Request count".
            </summary>
        </member>
        <member name="T:Google.Api.MetricDescriptor.Types">
            <summary>Container for nested types declared in the MetricDescriptor message type.</summary>
        </member>
        <member name="T:Google.Api.MetricDescriptor.Types.MetricKind">
            <summary>
             The kind of measurement. It describes how the data is reported.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.Types.MetricKind.Unspecified">
            <summary>
             Do not use this default value.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.Types.MetricKind.Gauge">
            <summary>
             Instantaneous measurements of a varying quantity.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.Types.MetricKind.Delta">
            <summary>
             Changes over non-overlapping time intervals.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.Types.MetricKind.Cumulative">
            <summary>
             Cumulative value over time intervals that can overlap.
             The overlapping intervals must have the same start time.
            </summary>
        </member>
        <member name="T:Google.Api.MetricDescriptor.Types.ValueType">
            <summary>
             The value type of a metric.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.Types.ValueType.Unspecified">
            <summary>
             Do not use this default value.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.Types.ValueType.Bool">
            <summary>
             The value is a boolean.
             This value type can be used only if the metric kind is `GAUGE`.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.Types.ValueType.Int64">
            <summary>
             The value is a signed 64-bit integer.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.Types.ValueType.Double">
            <summary>
             The value is a double precision floating point number.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.Types.ValueType.String">
            <summary>
             The value is a text string.
             This value type can be used only if the metric kind is `GAUGE`.
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.Types.ValueType.Distribution">
            <summary>
             The value is a [`Distribution`][google.api.Distribution].
            </summary>
        </member>
        <member name="F:Google.Api.MetricDescriptor.Types.ValueType.Money">
            <summary>
             The value is money.
            </summary>
        </member>
        <member name="T:Google.Api.Metric">
            <summary>
             A specific metric identified by specifying values for all of the
             labels of a [`MetricDescriptor`][google.api.MetricDescriptor].
            </summary>
        </member>
        <member name="F:Google.Api.Metric.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Google.Api.Metric.Type">
            <summary>
             An existing metric type, see [google.api.MetricDescriptor][google.api.MetricDescriptor].
             For example, `compute.googleapis.com/instance/cpu/usage_time`.
            </summary>
        </member>
        <member name="F:Google.Api.Metric.LabelsFieldNumber">
            <summary>Field number for the "labels" field.</summary>
        </member>
        <member name="P:Google.Api.Metric.Labels">
            <summary>
             The set of labels that uniquely identify a metric. To specify a
             metric, all labels enumerated in the `MetricDescriptor` must be
             assigned values.
            </summary>
        </member>
        <member name="T:Google.Api.MonitoredResourceReflection">
            <summary>Holder for reflection information generated from google/api/monitored_resource.proto</summary>
        </member>
        <member name="P:Google.Api.MonitoredResourceReflection.Descriptor">
            <summary>File descriptor for google/api/monitored_resource.proto</summary>
        </member>
        <member name="T:Google.Api.MonitoredResourceDescriptor">
             <summary>
              An object that describes the schema of a [MonitoredResource][google.api.MonitoredResource] object using a
              type name and a set of labels.  For example, the monitored resource
              descriptor for Google Compute Engine VM instances has a type of
              `"gce_instance"` and specifies the use of the labels `"instance_id"` and
              `"zone"` to identify particular VM instances.
            
              Different APIs can support different monitored resource types. APIs generally
              provide a `list` method that returns the monitored resource descriptors used
              by the API.
             </summary>
        </member>
        <member name="F:Google.Api.MonitoredResourceDescriptor.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Api.MonitoredResourceDescriptor.Name">
            <summary>
             Optional. The resource name of the monitored resource descriptor:
             `"projects/{project_id}/monitoredResourceDescriptors/{type}"` where
             {type} is the value of the `type` field in this object and
             {project_id} is a project ID that provides API-specific context for
             accessing the type.  APIs that do not use project information can use the
             resource name format `"monitoredResourceDescriptors/{type}"`.
            </summary>
        </member>
        <member name="F:Google.Api.MonitoredResourceDescriptor.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Google.Api.MonitoredResourceDescriptor.Type">
            <summary>
             Required. The monitored resource type. For example, the type
             `"cloudsql_database"` represents databases in Google Cloud SQL.
            </summary>
        </member>
        <member name="F:Google.Api.MonitoredResourceDescriptor.DisplayNameFieldNumber">
            <summary>Field number for the "display_name" field.</summary>
        </member>
        <member name="P:Google.Api.MonitoredResourceDescriptor.DisplayName">
            <summary>
             Optional. A concise name for the monitored resource type that might be
             displayed in user interfaces. For example, `"Google Cloud SQL Database"`.
            </summary>
        </member>
        <member name="F:Google.Api.MonitoredResourceDescriptor.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Google.Api.MonitoredResourceDescriptor.Description">
            <summary>
             Optional. A detailed description of the monitored resource type that might
             be used in documentation.
            </summary>
        </member>
        <member name="F:Google.Api.MonitoredResourceDescriptor.LabelsFieldNumber">
            <summary>Field number for the "labels" field.</summary>
        </member>
        <member name="P:Google.Api.MonitoredResourceDescriptor.Labels">
            <summary>
             Required. A set of labels used to describe instances of this monitored
             resource type. For example, an individual Google Cloud SQL database is
             identified by values for the labels `"database_id"` and `"zone"`.
            </summary>
        </member>
        <member name="T:Google.Api.MonitoredResource">
             <summary>
              An object representing a resource that can be used for monitoring, logging,
              billing, or other purposes. Examples include virtual machine instances,
              databases, and storage devices such as disks. The `type` field identifies a
              [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] object that describes the resource's
              schema. Information in the `labels` field identifies the actual resource and
              its attributes according to the schema. For example, a particular Compute
              Engine VM instance could be represented by the following object, because the
              [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] for `"gce_instance"` has labels
              `"instance_id"` and `"zone"`:
            
                  { "type": "gce_instance",
                    "labels": { "instance_id": "my-instance",
                                "zone": "us-central1-a" }}
             </summary>
        </member>
        <member name="F:Google.Api.MonitoredResource.TypeFieldNumber">
            <summary>Field number for the "type" field.</summary>
        </member>
        <member name="P:Google.Api.MonitoredResource.Type">
            <summary>
             Required. The monitored resource type. This field must match
             the `type` field of a [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] object. For
             example, the type of a Cloud SQL database is `"cloudsql_database"`.
            </summary>
        </member>
        <member name="F:Google.Api.MonitoredResource.LabelsFieldNumber">
            <summary>Field number for the "labels" field.</summary>
        </member>
        <member name="P:Google.Api.MonitoredResource.Labels">
            <summary>
             Required. Values for all of the labels listed in the associated monitored
             resource descriptor. For example, Cloud SQL databases use the labels
             `"database_id"` and `"zone"`.
            </summary>
        </member>
        <member name="T:Google.Api.MonitoringReflection">
            <summary>Holder for reflection information generated from google/api/monitoring.proto</summary>
        </member>
        <member name="P:Google.Api.MonitoringReflection.Descriptor">
            <summary>File descriptor for google/api/monitoring.proto</summary>
        </member>
        <member name="T:Google.Api.Monitoring">
             <summary>
              Monitoring configuration of the service.
            
              The example below shows how to configure monitored resources and metrics
              for monitoring. In the example, a monitored resource and two metrics are
              defined. The `library.googleapis.com/book/returned_count` metric is sent
              to both producer and consumer projects, whereas the
              `library.googleapis.com/book/overdue_count` metric is only sent to the
              consumer project.
            
                  monitored_resources:
                  - type: library.googleapis.com/branch
                    labels:
                    - key: /city
                      description: The city where the library branch is located in.
                    - key: /name
                      description: The name of the branch.
                  metrics:
                  - name: library.googleapis.com/book/returned_count
                    metric_kind: DELTA
                    value_type: INT64
                    labels:
                    - key: /customer_id
                  - name: library.googleapis.com/book/overdue_count
                    metric_kind: GAUGE
                    value_type: INT64
                    labels:
                    - key: /customer_id
                  monitoring:
                    producer_destinations:
                    - monitored_resource: library.googleapis.com/branch
                      metrics:
                      - library.googleapis.com/book/returned_count
                    consumer_destinations:
                    - monitored_resource: library.googleapis.com/branch
                      metrics:
                      - library.googleapis.com/book/returned_count
                      - library.googleapis.com/book/overdue_count
             </summary>
        </member>
        <member name="F:Google.Api.Monitoring.ProducerDestinationsFieldNumber">
            <summary>Field number for the "producer_destinations" field.</summary>
        </member>
        <member name="P:Google.Api.Monitoring.ProducerDestinations">
            <summary>
             Monitoring configurations for sending metrics to the producer project.
             There can be multiple producer destinations, each one must have a
             different monitored resource type. A metric can be used in at most
             one producer destination.
            </summary>
        </member>
        <member name="F:Google.Api.Monitoring.ConsumerDestinationsFieldNumber">
            <summary>Field number for the "consumer_destinations" field.</summary>
        </member>
        <member name="P:Google.Api.Monitoring.ConsumerDestinations">
            <summary>
             Monitoring configurations for sending metrics to the consumer project.
             There can be multiple consumer destinations, each one must have a
             different monitored resource type. A metric can be used in at most
             one consumer destination.
            </summary>
        </member>
        <member name="T:Google.Api.Monitoring.Types">
            <summary>Container for nested types declared in the Monitoring message type.</summary>
        </member>
        <member name="T:Google.Api.Monitoring.Types.MonitoringDestination">
            <summary>
             Configuration of a specific monitoring destination (the producer project
             or the consumer project).
            </summary>
        </member>
        <member name="F:Google.Api.Monitoring.Types.MonitoringDestination.MonitoredResourceFieldNumber">
            <summary>Field number for the "monitored_resource" field.</summary>
        </member>
        <member name="P:Google.Api.Monitoring.Types.MonitoringDestination.MonitoredResource">
            <summary>
             The monitored resource type. The type must be defined in
             [Service.monitored_resources][google.api.Service.monitored_resources] section.
            </summary>
        </member>
        <member name="F:Google.Api.Monitoring.Types.MonitoringDestination.MetricsFieldNumber">
            <summary>Field number for the "metrics" field.</summary>
        </member>
        <member name="P:Google.Api.Monitoring.Types.MonitoringDestination.Metrics">
            <summary>
             Names of the metrics to report to this monitoring destination.
             Each name must be defined in [Service.metrics][google.api.Service.metrics] section.
            </summary>
        </member>
        <member name="T:Google.Api.ServiceReflection">
            <summary>Holder for reflection information generated from google/api/service.proto</summary>
        </member>
        <member name="P:Google.Api.ServiceReflection.Descriptor">
            <summary>File descriptor for google/api/service.proto</summary>
        </member>
        <member name="T:Google.Api.Service">
             <summary>
              `Service` is the root object of the configuration schema. It
              describes basic information like the name of the service and the
              exposed API interfaces, and delegates other aspects to configuration
              sub-sections.
            
              Example:
            
                  type: google.api.Service
                  config_version: 1
                  name: calendar.googleapis.com
                  title: Google Calendar API
                  apis:
                  - name: google.calendar.Calendar
                  backend:
                    rules:
                    - selector: "*"
                      address: calendar.example.com
             </summary>
        </member>
        <member name="F:Google.Api.Service.ConfigVersionFieldNumber">
            <summary>Field number for the "config_version" field.</summary>
        </member>
        <member name="P:Google.Api.Service.ConfigVersion">
            <summary>
             The version of the service configuration. The config version may
             influence interpretation of the configuration, for example, to
             determine defaults. This is documented together with applicable
             options. The current default for the config version itself is `3`.
            </summary>
        </member>
        <member name="F:Google.Api.Service.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Name">
            <summary>
             The DNS address at which this service is available,
             e.g. `calendar.googleapis.com`.
            </summary>
        </member>
        <member name="F:Google.Api.Service.IdFieldNumber">
            <summary>Field number for the "id" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Id">
            <summary>
             A unique ID for a specific instance of this message, typically assigned
             by the client for tracking purpose. If empty, the server may choose to
             generate one instead.
            </summary>
        </member>
        <member name="F:Google.Api.Service.TitleFieldNumber">
            <summary>Field number for the "title" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Title">
            <summary>
             The product title associated with this service.
            </summary>
        </member>
        <member name="F:Google.Api.Service.ProducerProjectIdFieldNumber">
            <summary>Field number for the "producer_project_id" field.</summary>
        </member>
        <member name="P:Google.Api.Service.ProducerProjectId">
            <summary>
             The id of the Google developer project that owns the service.
             Members of this project can manage the service configuration,
             manage consumption of the service, etc.
            </summary>
        </member>
        <member name="F:Google.Api.Service.ApisFieldNumber">
            <summary>Field number for the "apis" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Apis">
            <summary>
             A list of API interfaces exported by this service. Only the `name` field
             of the [google.protobuf.Api][google.protobuf.Api] needs to be provided by the configuration
             author, as the remaining fields will be derived from the IDL during the
             normalization process. It is an error to specify an API interface here
             which cannot be resolved against the associated IDL files.
            </summary>
        </member>
        <member name="F:Google.Api.Service.Types_FieldNumber">
            <summary>Field number for the "types" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Types_">
             <summary>
              A list of all proto message types included in this API service.
              Types referenced directly or indirectly by the `apis` are
              automatically included.  Messages which are not referenced but
              shall be included, such as types used by the `google.protobuf.Any` type,
              should be listed here by name. Example:
            
                  types:
                  - name: google.protobuf.Int32
             </summary>
        </member>
        <member name="F:Google.Api.Service.EnumsFieldNumber">
            <summary>Field number for the "enums" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Enums">
             <summary>
              A list of all enum types included in this API service.  Enums
              referenced directly or indirectly by the `apis` are automatically
              included.  Enums which are not referenced but shall be included
              should be listed here by name. Example:
            
                  enums:
                  - name: google.someapi.v1.SomeEnum
             </summary>
        </member>
        <member name="F:Google.Api.Service.DocumentationFieldNumber">
            <summary>Field number for the "documentation" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Documentation">
            <summary>
             Additional API documentation.
            </summary>
        </member>
        <member name="F:Google.Api.Service.BackendFieldNumber">
            <summary>Field number for the "backend" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Backend">
            <summary>
             API backend configuration.
            </summary>
        </member>
        <member name="F:Google.Api.Service.HttpFieldNumber">
            <summary>Field number for the "http" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Http">
            <summary>
             HTTP configuration.
            </summary>
        </member>
        <member name="F:Google.Api.Service.AuthenticationFieldNumber">
            <summary>Field number for the "authentication" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Authentication">
            <summary>
             Auth configuration.
            </summary>
        </member>
        <member name="F:Google.Api.Service.ContextFieldNumber">
            <summary>Field number for the "context" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Context">
            <summary>
             Context configuration.
            </summary>
        </member>
        <member name="F:Google.Api.Service.UsageFieldNumber">
            <summary>Field number for the "usage" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Usage">
            <summary>
             Configuration controlling usage of this service.
            </summary>
        </member>
        <member name="F:Google.Api.Service.ProjectPropertiesFieldNumber">
            <summary>Field number for the "project_properties" field.</summary>
        </member>
        <member name="P:Google.Api.Service.ProjectProperties">
            <summary>
             Configuration of per-consumer project properties.
            </summary>
        </member>
        <member name="F:Google.Api.Service.ControlFieldNumber">
            <summary>Field number for the "control" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Control">
            <summary>
             Configuration for the service control plane.
            </summary>
        </member>
        <member name="F:Google.Api.Service.LogsFieldNumber">
            <summary>Field number for the "logs" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Logs">
            <summary>
             Defines the logs used by this service.
            </summary>
        </member>
        <member name="F:Google.Api.Service.MetricsFieldNumber">
            <summary>Field number for the "metrics" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Metrics">
            <summary>
             Defines the metrics used by this service.
            </summary>
        </member>
        <member name="F:Google.Api.Service.MonitoredResourcesFieldNumber">
            <summary>Field number for the "monitored_resources" field.</summary>
        </member>
        <member name="P:Google.Api.Service.MonitoredResources">
            <summary>
             Defines the monitored resources used by this service. This is required
             by the [Service.monitoring][google.api.Service.monitoring] and [Service.logging][google.api.Service.logging] configurations.
            </summary>
        </member>
        <member name="F:Google.Api.Service.BillingFieldNumber">
            <summary>Field number for the "billing" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Billing">
            <summary>
             Billing configuration of the service.
            </summary>
        </member>
        <member name="F:Google.Api.Service.LoggingFieldNumber">
            <summary>Field number for the "logging" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Logging">
            <summary>
             Logging configuration of the service.
            </summary>
        </member>
        <member name="F:Google.Api.Service.MonitoringFieldNumber">
            <summary>Field number for the "monitoring" field.</summary>
        </member>
        <member name="P:Google.Api.Service.Monitoring">
            <summary>
             Monitoring configuration of the service.
            </summary>
        </member>
        <member name="F:Google.Api.Service.SystemParametersFieldNumber">
            <summary>Field number for the "system_parameters" field.</summary>
        </member>
        <member name="P:Google.Api.Service.SystemParameters">
            <summary>
             Configuration for system parameters.
            </summary>
        </member>
        <member name="T:Google.Api.SystemParameterReflection">
            <summary>Holder for reflection information generated from google/api/system_parameter.proto</summary>
        </member>
        <member name="P:Google.Api.SystemParameterReflection.Descriptor">
            <summary>File descriptor for google/api/system_parameter.proto</summary>
        </member>
        <member name="T:Google.Api.SystemParameters">
             <summary>
              ### System parameter configuration
            
              A system parameter is a special kind of parameter defined by the API
              system, not by an individual API. It is typically mapped to an HTTP header
              and/or a URL query parameter. This configuration specifies which methods
              change the names of the system parameters.
             </summary>
        </member>
        <member name="F:Google.Api.SystemParameters.RulesFieldNumber">
            <summary>Field number for the "rules" field.</summary>
        </member>
        <member name="P:Google.Api.SystemParameters.Rules">
             <summary>
              Define system parameters.
            
              The parameters defined here will override the default parameters
              implemented by the system. If this field is missing from the service
              config, default system parameters will be used. Default system parameters
              and names is implementation-dependent.
            
              Example: define api key and alt name for all methods
            
              SystemParameters
                rules:
                  - selector: "*"
                    parameters:
                      - name: api_key
                        url_query_parameter: api_key
                      - name: alt
                        http_header: Response-Content-Type
            
              Example: define 2 api key names for a specific method.
            
              SystemParameters
                rules:
                  - selector: "/ListShelves"
                    parameters:
                      - name: api_key
                        http_header: Api-Key1
                      - name: api_key
                        http_header: Api-Key2
             </summary>
        </member>
        <member name="T:Google.Api.SystemParameterRule">
            <summary>
             Define a system parameter rule mapping system parameter definitions to
             methods.
            </summary>
        </member>
        <member name="F:Google.Api.SystemParameterRule.SelectorFieldNumber">
            <summary>Field number for the "selector" field.</summary>
        </member>
        <member name="P:Google.Api.SystemParameterRule.Selector">
             <summary>
              Selects the methods to which this rule applies. Use '*' to indicate all
              methods in all APIs.
            
              Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
             </summary>
        </member>
        <member name="F:Google.Api.SystemParameterRule.ParametersFieldNumber">
            <summary>Field number for the "parameters" field.</summary>
        </member>
        <member name="P:Google.Api.SystemParameterRule.Parameters">
            <summary>
             Define parameters. Multiple names may be defined for a parameter.
             For a given method call, only one of them should be used. If multiple
             names are used the behavior is implementation-dependent.
             If none of the specified names are present the behavior is
             parameter-dependent.
            </summary>
        </member>
        <member name="T:Google.Api.SystemParameter">
            <summary>
             Define a parameter's name and location. The parameter may be passed as either
             an HTTP header or a URL query parameter, and if both are passed the behavior
             is implementation-dependent.
            </summary>
        </member>
        <member name="F:Google.Api.SystemParameter.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Api.SystemParameter.Name">
            <summary>
             Define the name of the parameter, such as "api_key", "alt", "callback",
             and etc. It is case sensitive.
            </summary>
        </member>
        <member name="F:Google.Api.SystemParameter.HttpHeaderFieldNumber">
            <summary>Field number for the "http_header" field.</summary>
        </member>
        <member name="P:Google.Api.SystemParameter.HttpHeader">
            <summary>
             Define the HTTP header name to use for the parameter. It is case
             insensitive.
            </summary>
        </member>
        <member name="F:Google.Api.SystemParameter.UrlQueryParameterFieldNumber">
            <summary>Field number for the "url_query_parameter" field.</summary>
        </member>
        <member name="P:Google.Api.SystemParameter.UrlQueryParameter">
            <summary>
             Define the URL query parameter name to use for the parameter. It is case
             sensitive.
            </summary>
        </member>
        <member name="T:Google.Api.UsageReflection">
            <summary>Holder for reflection information generated from google/api/usage.proto</summary>
        </member>
        <member name="P:Google.Api.UsageReflection.Descriptor">
            <summary>File descriptor for google/api/usage.proto</summary>
        </member>
        <member name="T:Google.Api.Usage">
            <summary>
             Configuration controlling usage of a service.
            </summary>
        </member>
        <member name="F:Google.Api.Usage.ServiceAccessFieldNumber">
            <summary>Field number for the "service_access" field.</summary>
        </member>
        <member name="P:Google.Api.Usage.ServiceAccess">
            <summary>
             Controls which users can see or activate the service.
            </summary>
        </member>
        <member name="F:Google.Api.Usage.RequirementsFieldNumber">
            <summary>Field number for the "requirements" field.</summary>
        </member>
        <member name="P:Google.Api.Usage.Requirements">
            <summary>
             Requirements that must be satisfied before a consumer project can use the
             service. Each requirement is of the form &lt;service.name>/&lt;requirement-id>;
             for example 'serviceusage.googleapis.com/billing-enabled'.
            </summary>
        </member>
        <member name="F:Google.Api.Usage.DependsOnServicesFieldNumber">
            <summary>Field number for the "depends_on_services" field.</summary>
        </member>
        <member name="P:Google.Api.Usage.DependsOnServices">
            <summary>
             Services that must be activated in order for this service to be used.
             The set of services activated as a result of these relations are all
             activated in parallel with no guaranteed order of activation.
             Each string is a service name, e.g. `calendar.googleapis.com`.
            </summary>
        </member>
        <member name="F:Google.Api.Usage.ActivationHooksFieldNumber">
            <summary>Field number for the "activation_hooks" field.</summary>
        </member>
        <member name="P:Google.Api.Usage.ActivationHooks">
            <summary>
             Services that must be contacted before a consumer can begin using the
             service. Each service will be contacted in sequence, and, if any activation
             call fails, the entire activation will fail. Each hook is of the form
             &lt;service.name>/&lt;hook-id>, where &lt;hook-id> is optional; for example:
             'robotservice.googleapis.com/default'.
            </summary>
        </member>
        <member name="F:Google.Api.Usage.DeactivationHooksFieldNumber">
            <summary>Field number for the "deactivation_hooks" field.</summary>
        </member>
        <member name="P:Google.Api.Usage.DeactivationHooks">
            <summary>
             Services that must be contacted before a consumer can deactivate a
             service. Each service will be contacted in sequence, and, if any
             deactivation call fails, the entire deactivation will fail. Each hook is
             of the form &lt;service.name>/&lt;hook-id>, where &lt;hook-id> is optional; for
             example:
             'compute.googleapis.com/'.
            </summary>
        </member>
        <member name="F:Google.Api.Usage.RulesFieldNumber">
            <summary>Field number for the "rules" field.</summary>
        </member>
        <member name="P:Google.Api.Usage.Rules">
            <summary>
             Individual rules for configuring usage on selected methods.
            </summary>
        </member>
        <member name="T:Google.Api.Usage.Types">
            <summary>Container for nested types declared in the Usage message type.</summary>
        </member>
        <member name="T:Google.Api.Usage.Types.ServiceAccess">
             <summary>
              Service access types.
            
              Access to restricted API features is always controlled by
              [visibility][google.api.Visibility], independent of the ServiceAccess type.
             </summary>
        </member>
        <member name="F:Google.Api.Usage.Types.ServiceAccess.Restricted">
             <summary>
              The service can only be seen/used by users identified in the service's
              access control policy.
            
              If the service has not been whitelisted by your domain administrator
              for out-of-org publishing, then this mode will be treated like
              ORG_RESTRICTED.
             </summary>
        </member>
        <member name="F:Google.Api.Usage.Types.ServiceAccess.Public">
             <summary>
              The service can be seen/used by anyone.
            
              If the service has not been whitelisted by your domain administrator
              for out-of-org publishing, then this mode will be treated like
              ORG_PUBLIC.
            
              The discovery document for the service will also be public and allow
              unregistered access.
             </summary>
        </member>
        <member name="F:Google.Api.Usage.Types.ServiceAccess.OrgRestricted">
             <summary>
              The service can be seen/used by users identified in the service's
              access control policy and they are within the organization that owns the
              service.
            
              Access is further constrained to the group
              controlled by the administrator of the project/org that owns the
              service.
             </summary>
        </member>
        <member name="F:Google.Api.Usage.Types.ServiceAccess.OrgPublic">
            <summary>
             The service can be seen/used by the group of users controlled by the
             administrator of the project/org that owns the service.
            </summary>
        </member>
        <member name="T:Google.Api.UsageRule">
             <summary>
              Usage configuration rules for the service.
            
              NOTE: Under development.
            
              Use this rule to configure unregistered calls for the service. Unregistered
              calls are calls that do not contain consumer project identity.
              (Example: calls that do not contain an API key).
              By default, API methods do not allow unregistered calls, and each method call
              must be identified by a consumer project identity. Use this rule to
              allow/disallow unregistered calls.
            
              Example of an API that wants to allow unregistered calls for entire service.
            
                  usage:
                    rules:
                    - selector: "*"
                      allow_unregistered_calls: true
            
              Example of a method that wants to allow unregistered calls.
            
                  usage:
                    rules:
                    - selector: "google.example.library.v1.LibraryService.CreateBook"
                      allow_unregistered_calls: true
             </summary>
        </member>
        <member name="F:Google.Api.UsageRule.SelectorFieldNumber">
            <summary>Field number for the "selector" field.</summary>
        </member>
        <member name="P:Google.Api.UsageRule.Selector">
             <summary>
              Selects the methods to which this rule applies. Use '*' to indicate all
              methods in all APIs.
            
              Refer to [selector][google.api.DocumentationRule.selector] for syntax details.
             </summary>
        </member>
        <member name="F:Google.Api.UsageRule.AllowUnregisteredCallsFieldNumber">
            <summary>Field number for the "allow_unregistered_calls" field.</summary>
        </member>
        <member name="P:Google.Api.UsageRule.AllowUnregisteredCalls">
            <summary>
             True, if the method allows unregistered calls; false otherwise.
            </summary>
        </member>
        <member name="T:Google.Longrunning.OperationsReflection">
            <summary>Holder for reflection information generated from google/longrunning/operations.proto</summary>
        </member>
        <member name="P:Google.Longrunning.OperationsReflection.Descriptor">
            <summary>File descriptor for google/longrunning/operations.proto</summary>
        </member>
        <member name="T:Google.Longrunning.Operation">
            <summary>
             This resource represents a long-running operation that is the result of a
             network API call.
            </summary>
        </member>
        <member name="F:Google.Longrunning.Operation.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Longrunning.Operation.Name">
            <summary>
             The name of the operation resource, which is only unique within the same
             service that originally returns it.
            </summary>
        </member>
        <member name="F:Google.Longrunning.Operation.MetadataFieldNumber">
            <summary>Field number for the "metadata" field.</summary>
        </member>
        <member name="P:Google.Longrunning.Operation.Metadata">
            <summary>
             Some service-specific metadata associated with the operation.  It typically
             contains progress information and common metadata such as create time.
             Some services may not provide such metadata.  Any method that returns a
             long-running operation should document the metadata type, if any.
            </summary>
        </member>
        <member name="F:Google.Longrunning.Operation.DoneFieldNumber">
            <summary>Field number for the "done" field.</summary>
        </member>
        <member name="P:Google.Longrunning.Operation.Done">
            <summary>
             If the value is false, it means the operation is still in progress.
             If true, the operation is completed and the `result` is available.
            </summary>
        </member>
        <member name="F:Google.Longrunning.Operation.ErrorFieldNumber">
            <summary>Field number for the "error" field.</summary>
        </member>
        <member name="P:Google.Longrunning.Operation.Error">
            <summary>
             The error result of the operation in case of failure.
            </summary>
        </member>
        <member name="F:Google.Longrunning.Operation.ResponseFieldNumber">
            <summary>Field number for the "response" field.</summary>
        </member>
        <member name="P:Google.Longrunning.Operation.Response">
            <summary>
             The normal response of the operation in case of success.  If the original
             method returns no data on success, such as `Delete`, the response will be
             `google.protobuf.Empty`.  If the original method is standard
             `Get`/`Create`/`Update`, the response should be the resource.  For other
             methods, the response should have the type `XxxResponse`, where `Xxx`
             is the original method name.  For example, if the original method name
             is `TakeSnapshot()`, the inferred response type will be
             `TakeSnapshotResponse`.
            </summary>
        </member>
        <member name="T:Google.Longrunning.Operation.ResultOneofCase">
            <summary>Enum of possible cases for the "result" oneof.</summary>
        </member>
        <member name="T:Google.Longrunning.GetOperationRequest">
            <summary>
             The request message for [Operations.GetOperation][google.longrunning.Operations.GetOperation].
            </summary>
        </member>
        <member name="F:Google.Longrunning.GetOperationRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Longrunning.GetOperationRequest.Name">
            <summary>
             The name of the operation resource.
            </summary>
        </member>
        <member name="T:Google.Longrunning.ListOperationsRequest">
            <summary>
             The request message for [Operations.ListOperations][google.longrunning.Operations.ListOperations].
            </summary>
        </member>
        <member name="F:Google.Longrunning.ListOperationsRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Longrunning.ListOperationsRequest.Name">
            <summary>
             The name of the operation collection.
            </summary>
        </member>
        <member name="F:Google.Longrunning.ListOperationsRequest.FilterFieldNumber">
            <summary>Field number for the "filter" field.</summary>
        </member>
        <member name="P:Google.Longrunning.ListOperationsRequest.Filter">
            <summary>
             The standard List filter.
            </summary>
        </member>
        <member name="F:Google.Longrunning.ListOperationsRequest.PageSizeFieldNumber">
            <summary>Field number for the "page_size" field.</summary>
        </member>
        <member name="P:Google.Longrunning.ListOperationsRequest.PageSize">
            <summary>
             The standard List page size.
            </summary>
        </member>
        <member name="F:Google.Longrunning.ListOperationsRequest.PageTokenFieldNumber">
            <summary>Field number for the "page_token" field.</summary>
        </member>
        <member name="P:Google.Longrunning.ListOperationsRequest.PageToken">
            <summary>
             The standard List page token.
            </summary>
        </member>
        <member name="T:Google.Longrunning.ListOperationsResponse">
            <summary>
             The response message for [Operations.ListOperations][google.longrunning.Operations.ListOperations].
            </summary>
        </member>
        <member name="F:Google.Longrunning.ListOperationsResponse.OperationsFieldNumber">
            <summary>Field number for the "operations" field.</summary>
        </member>
        <member name="P:Google.Longrunning.ListOperationsResponse.Operations">
            <summary>
             A list of operations that match the specified filter in the request.
            </summary>
        </member>
        <member name="F:Google.Longrunning.ListOperationsResponse.NextPageTokenFieldNumber">
            <summary>Field number for the "next_page_token" field.</summary>
        </member>
        <member name="P:Google.Longrunning.ListOperationsResponse.NextPageToken">
            <summary>
             The standard List next-page token.
            </summary>
        </member>
        <member name="T:Google.Longrunning.CancelOperationRequest">
            <summary>
             The request message for [Operations.CancelOperation][google.longrunning.Operations.CancelOperation].
            </summary>
        </member>
        <member name="F:Google.Longrunning.CancelOperationRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Longrunning.CancelOperationRequest.Name">
            <summary>
             The name of the operation resource to be cancelled.
            </summary>
        </member>
        <member name="T:Google.Longrunning.DeleteOperationRequest">
            <summary>
             The request message for [Operations.DeleteOperation][google.longrunning.Operations.DeleteOperation].
            </summary>
        </member>
        <member name="F:Google.Longrunning.DeleteOperationRequest.NameFieldNumber">
            <summary>Field number for the "name" field.</summary>
        </member>
        <member name="P:Google.Longrunning.DeleteOperationRequest.Name">
            <summary>
             The name of the operation resource to be deleted.
            </summary>
        </member>
        <member name="T:Google.Rpc.CodeReflection">
            <summary>Holder for reflection information generated from google/rpc/code.proto</summary>
        </member>
        <member name="P:Google.Rpc.CodeReflection.Descriptor">
            <summary>File descriptor for google/rpc/code.proto</summary>
        </member>
        <member name="T:Google.Rpc.Code">
             <summary>
              The canonical error codes for Google APIs.
              Warnings:
            
              -   Do not change any numeric assignments.
              -   Changes to this list should be made only if there is a compelling
                  need that can't be satisfied in another way.
            
              Sometimes multiple error codes may apply.  Services should return
              the most specific error code that applies.  For example, prefer
              `OUT_OF_RANGE` over `FAILED_PRECONDITION` if both codes apply.
              Similarly prefer `NOT_FOUND` or `ALREADY_EXISTS` over `FAILED_PRECONDITION`.
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.Ok">
             <summary>
              Not an error; returned on success
            
              HTTP Mapping: 200 OK
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.Cancelled">
             <summary>
              The operation was cancelled, typically by the caller.
            
              HTTP Mapping: 499 Client Closed Request
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.Unknown">
             <summary>
              Unknown error.  For example, this error may be returned when
              a `Status` value received from another address space belongs to
              an error space that is not known in this address space.  Also
              errors raised by APIs that do not return enough error information
              may be converted to this error.
            
              HTTP Mapping: 500 Internal Server Error
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.InvalidArgument">
             <summary>
              The client specified an invalid argument.  Note that this differs
              from `FAILED_PRECONDITION`.  `INVALID_ARGUMENT` indicates arguments
              that are problematic regardless of the state of the system
              (e.g., a malformed file name).
            
              HTTP Mapping: 400 Bad Request
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.DeadlineExceeded">
             <summary>
              The deadline expired before the operation could complete. For operations
              that change the state of the system, this error may be returned
              even if the operation has completed successfully.  For example, a
              successful response from a server could have been delayed long
              enough for the deadline to expire.
            
              HTTP Mapping: 504 Gateway Timeout
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.NotFound">
             <summary>
              Some requested entity (e.g., file or directory) was not found.
              For privacy reasons, this code *might* be returned when the client
              does not have the access rights to the entity.
            
              HTTP Mapping: 404 Not Found
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.AlreadyExists">
             <summary>
              The entity that a client attempted to create (e.g., file or directory)
              already exists.
            
              HTTP Mapping: 409 Conflict
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.PermissionDenied">
             <summary>
              The caller does not have permission to execute the specified
              operation. `PERMISSION_DENIED` must not be used for rejections
              caused by exhausting some resource (use `RESOURCE_EXHAUSTED`
              instead for those errors). `PERMISSION_DENIED` must not be
              used if the caller can not be identified (use `UNAUTHENTICATED`
              instead for those errors).
            
              HTTP Mapping: 403 Forbidden
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.Unauthenticated">
             <summary>
              The request does not have valid authentication credentials for the
              operation.
            
              HTTP Mapping: 401 Unauthorized
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.ResourceExhausted">
             <summary>
              Some resource has been exhausted, perhaps a per-user quota, or
              perhaps the entire file system is out of space.
            
              HTTP Mapping: 429 Too Many Requests
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.FailedPrecondition">
             <summary>
              The operation was rejected because the system is not in a state
              required for the operation's execution.  For example, the directory
              to be deleted is non-empty, an rmdir operation is applied to
              a non-directory, etc.
            
              Service implementors can use the following guidelines to decide
              between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`:
               (a) Use `UNAVAILABLE` if the client can retry just the failing call.
               (b) Use `ABORTED` if the client should retry at a higher level
                   (e.g., restarting a read-modify-write sequence).
               (c) Use `FAILED_PRECONDITION` if the client should not retry until
                   the system state has been explicitly fixed.  E.g., if an "rmdir"
                   fails because the directory is non-empty, `FAILED_PRECONDITION`
                   should be returned since the client should not retry unless
                   the files are deleted from the directory.
               (d) Use `FAILED_PRECONDITION` if the client performs conditional
                   REST Get/Update/Delete on a resource and the resource on the
                   server does not match the condition. E.g., conflicting
                   read-modify-write on the same resource.
            
              HTTP Mapping: 400 Bad Request
            
              NOTE: HTTP spec says `412 Precondition Failed` should be used only if
              the request contains Etag-related headers. So if the server does see
              Etag-related headers in the request, it may choose to return 412
              instead of 400 for this error code.
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.Aborted">
             <summary>
              The operation was aborted, typically due to a concurrency issue such as
              a sequencer check failure or transaction abort.
            
              See the guidelines above for deciding between `FAILED_PRECONDITION`,
              `ABORTED`, and `UNAVAILABLE`.
            
              HTTP Mapping: 409 Conflict
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.OutOfRange">
             <summary>
              The operation was attempted past the valid range.  E.g., seeking or
              reading past end-of-file.
            
              Unlike `INVALID_ARGUMENT`, this error indicates a problem that may
              be fixed if the system state changes. For example, a 32-bit file
              system will generate `INVALID_ARGUMENT` if asked to read at an
              offset that is not in the range [0,2^32-1], but it will generate
              `OUT_OF_RANGE` if asked to read from an offset past the current
              file size.
            
              There is a fair bit of overlap between `FAILED_PRECONDITION` and
              `OUT_OF_RANGE`.  We recommend using `OUT_OF_RANGE` (the more specific
              error) when it applies so that callers who are iterating through
              a space can easily look for an `OUT_OF_RANGE` error to detect when
              they are done.
            
              HTTP Mapping: 400 Bad Request
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.Unimplemented">
             <summary>
              The operation is not implemented or is not supported/enabled in this
              service.
            
              HTTP Mapping: 501 Not Implemented
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.Internal">
             <summary>
              Internal errors.  This means that some invariants expected by the
              underlying system have been broken.  This error code is reserved
              for serious errors.
            
              HTTP Mapping: 500 Internal Server Error
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.Unavailable">
             <summary>
              The service is currently unavailable.  This is most likely a
              transient condition, which can be corrected by retrying with
              a backoff.
            
              See the guidelines above for deciding between `FAILED_PRECONDITION`,
              `ABORTED`, and `UNAVAILABLE`.
            
              HTTP Mapping: 503 Service Unavailable
             </summary>
        </member>
        <member name="F:Google.Rpc.Code.DataLoss">
             <summary>
              Unrecoverable data loss or corruption.
            
              HTTP Mapping: 500 Internal Server Error
             </summary>
        </member>
        <member name="T:Google.Rpc.ErrorDetailsReflection">
            <summary>Holder for reflection information generated from google/rpc/error_details.proto</summary>
        </member>
        <member name="P:Google.Rpc.ErrorDetailsReflection.Descriptor">
            <summary>File descriptor for google/rpc/error_details.proto</summary>
        </member>
        <member name="T:Google.Rpc.RetryInfo">
             <summary>
              Describes when the clients can retry a failed request. Clients could ignore
              the recommendation here or retry when this information is missing from error
              responses.
            
              It's always recommended that clients should use exponential backoff when
              retrying.
            
              Clients should wait until `retry_delay` amount of time has passed since
              receiving the error response before retrying.  If retrying requests also
              fail, clients should use an exponential backoff scheme to gradually increase
              the delay between retries based on `retry_delay`, until either a maximum
              number of retires have been reached or a maximum retry delay cap has been
              reached.
             </summary>
        </member>
        <member name="F:Google.Rpc.RetryInfo.RetryDelayFieldNumber">
            <summary>Field number for the "retry_delay" field.</summary>
        </member>
        <member name="P:Google.Rpc.RetryInfo.RetryDelay">
            <summary>
             Clients should wait at least this long between retrying the same request.
            </summary>
        </member>
        <member name="T:Google.Rpc.DebugInfo">
            <summary>
             Describes additional debugging info.
            </summary>
        </member>
        <member name="F:Google.Rpc.DebugInfo.StackEntriesFieldNumber">
            <summary>Field number for the "stack_entries" field.</summary>
        </member>
        <member name="P:Google.Rpc.DebugInfo.StackEntries">
            <summary>
             The stack trace entries indicating where the error occurred.
            </summary>
        </member>
        <member name="F:Google.Rpc.DebugInfo.DetailFieldNumber">
            <summary>Field number for the "detail" field.</summary>
        </member>
        <member name="P:Google.Rpc.DebugInfo.Detail">
            <summary>
             Additional debugging information provided by the server.
            </summary>
        </member>
        <member name="T:Google.Rpc.QuotaFailure">
             <summary>
              Describes how a quota check failed.
            
              For example if a daily limit was exceeded for the calling project,
              a service could respond with a QuotaFailure detail containing the project
              id and the description of the quota limit that was exceeded.  If the
              calling project hasn't enabled the service in the developer console, then
              a service could respond with the project id and set `service_disabled`
              to true.
            
              Also see RetryDetail and Help types for other details about handling a
              quota failure.
             </summary>
        </member>
        <member name="F:Google.Rpc.QuotaFailure.ViolationsFieldNumber">
            <summary>Field number for the "violations" field.</summary>
        </member>
        <member name="P:Google.Rpc.QuotaFailure.Violations">
            <summary>
             Describes all quota violations.
            </summary>
        </member>
        <member name="T:Google.Rpc.QuotaFailure.Types">
            <summary>Container for nested types declared in the QuotaFailure message type.</summary>
        </member>
        <member name="T:Google.Rpc.QuotaFailure.Types.Violation">
            <summary>
             A message type used to describe a single quota violation.  For example, a
             daily quota or a custom quota that was exceeded.
            </summary>
        </member>
        <member name="F:Google.Rpc.QuotaFailure.Types.Violation.SubjectFieldNumber">
            <summary>Field number for the "subject" field.</summary>
        </member>
        <member name="P:Google.Rpc.QuotaFailure.Types.Violation.Subject">
            <summary>
             The subject on which the quota check failed.
             For example, "clientip:&lt;ip address of client>" or "project:&lt;Google
             developer project id>".
            </summary>
        </member>
        <member name="F:Google.Rpc.QuotaFailure.Types.Violation.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Google.Rpc.QuotaFailure.Types.Violation.Description">
             <summary>
              A description of how the quota check failed. Clients can use this
              description to find more about the quota configuration in the service's
              public documentation, or find the relevant quota limit to adjust through
              developer console.
            
              For example: "Service disabled" or "Daily Limit for read operations
              exceeded".
             </summary>
        </member>
        <member name="T:Google.Rpc.BadRequest">
            <summary>
             Describes violations in a client request. This error type focuses on the
             syntactic aspects of the request.
            </summary>
        </member>
        <member name="F:Google.Rpc.BadRequest.FieldViolationsFieldNumber">
            <summary>Field number for the "field_violations" field.</summary>
        </member>
        <member name="P:Google.Rpc.BadRequest.FieldViolations">
            <summary>
             Describes all violations in a client request.
            </summary>
        </member>
        <member name="T:Google.Rpc.BadRequest.Types">
            <summary>Container for nested types declared in the BadRequest message type.</summary>
        </member>
        <member name="T:Google.Rpc.BadRequest.Types.FieldViolation">
            <summary>
             A message type used to describe a single bad request field.
            </summary>
        </member>
        <member name="F:Google.Rpc.BadRequest.Types.FieldViolation.FieldFieldNumber">
            <summary>Field number for the "field" field.</summary>
        </member>
        <member name="P:Google.Rpc.BadRequest.Types.FieldViolation.Field">
            <summary>
             A path leading to a field in the request body. The value will be a
             sequence of dot-separated identifiers that identify a protocol buffer
             field. E.g., "violations.field" would identify this field.
            </summary>
        </member>
        <member name="F:Google.Rpc.BadRequest.Types.FieldViolation.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Google.Rpc.BadRequest.Types.FieldViolation.Description">
            <summary>
             A description of why the request element is bad.
            </summary>
        </member>
        <member name="T:Google.Rpc.RequestInfo">
            <summary>
             Contains metadata about the request that clients can attach when filing a bug
             or providing other forms of feedback.
            </summary>
        </member>
        <member name="F:Google.Rpc.RequestInfo.RequestIdFieldNumber">
            <summary>Field number for the "request_id" field.</summary>
        </member>
        <member name="P:Google.Rpc.RequestInfo.RequestId">
            <summary>
             An opaque string that should only be interpreted by the service generating
             it. For example, it can be used to identify requests in the service's logs.
            </summary>
        </member>
        <member name="F:Google.Rpc.RequestInfo.ServingDataFieldNumber">
            <summary>Field number for the "serving_data" field.</summary>
        </member>
        <member name="P:Google.Rpc.RequestInfo.ServingData">
            <summary>
             Any data that was used to serve this request. For example, an encrypted
             stack trace that can be sent back to the service provider for debugging.
            </summary>
        </member>
        <member name="T:Google.Rpc.ResourceInfo">
            <summary>
             Describes the resource that is being accessed.
            </summary>
        </member>
        <member name="F:Google.Rpc.ResourceInfo.ResourceTypeFieldNumber">
            <summary>Field number for the "resource_type" field.</summary>
        </member>
        <member name="P:Google.Rpc.ResourceInfo.ResourceType">
            <summary>
             A name for the type of resource being accessed, e.g. "sql table",
             "cloud storage bucket", "file", "Google calendar"; or the type URL
             of the resource: e.g. "type.googleapis.com/google.pubsub.v1.Topic".
            </summary>
        </member>
        <member name="F:Google.Rpc.ResourceInfo.ResourceNameFieldNumber">
            <summary>Field number for the "resource_name" field.</summary>
        </member>
        <member name="P:Google.Rpc.ResourceInfo.ResourceName">
            <summary>
             The name of the resource being accessed.  For example, a shared calendar
             name: "example.com_4fghdhgsrgh@group.calendar.google.com", if the current
             error is [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED].
            </summary>
        </member>
        <member name="F:Google.Rpc.ResourceInfo.OwnerFieldNumber">
            <summary>Field number for the "owner" field.</summary>
        </member>
        <member name="P:Google.Rpc.ResourceInfo.Owner">
            <summary>
             The owner of the resource (optional).
             For example, "user:&lt;owner email>" or "project:&lt;Google developer project
             id>".
            </summary>
        </member>
        <member name="F:Google.Rpc.ResourceInfo.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Google.Rpc.ResourceInfo.Description">
            <summary>
             Describes what error is encountered when accessing this resource.
             For example, updating a cloud project may require the `writer` permission
             on the developer console project.
            </summary>
        </member>
        <member name="T:Google.Rpc.Help">
             <summary>
              Provides links to documentation or for performing an out of band action.
            
              For example, if a quota check failed with an error indicating the calling
              project hasn't enabled the accessed service, this can contain a URL pointing
              directly to the right place in the developer console to flip the bit.
             </summary>
        </member>
        <member name="F:Google.Rpc.Help.LinksFieldNumber">
            <summary>Field number for the "links" field.</summary>
        </member>
        <member name="P:Google.Rpc.Help.Links">
            <summary>
             URL(s) pointing to additional information on handling the current error.
            </summary>
        </member>
        <member name="T:Google.Rpc.Help.Types">
            <summary>Container for nested types declared in the Help message type.</summary>
        </member>
        <member name="T:Google.Rpc.Help.Types.Link">
            <summary>
             Describes a URL link.
            </summary>
        </member>
        <member name="F:Google.Rpc.Help.Types.Link.DescriptionFieldNumber">
            <summary>Field number for the "description" field.</summary>
        </member>
        <member name="P:Google.Rpc.Help.Types.Link.Description">
            <summary>
             Describes what the link offers.
            </summary>
        </member>
        <member name="F:Google.Rpc.Help.Types.Link.UrlFieldNumber">
            <summary>Field number for the "url" field.</summary>
        </member>
        <member name="P:Google.Rpc.Help.Types.Link.Url">
            <summary>
             The URL of the link.
            </summary>
        </member>
        <member name="T:Google.Rpc.StatusReflection">
            <summary>Holder for reflection information generated from google/rpc/status.proto</summary>
        </member>
        <member name="P:Google.Rpc.StatusReflection.Descriptor">
            <summary>File descriptor for google/rpc/status.proto</summary>
        </member>
        <member name="T:Google.Rpc.Status">
             <summary>
              The `Status` type defines a logical error model that is suitable for different
              programming environments, including REST APIs and RPC APIs. It is used by
              [gRPC](https://github.com/grpc). The error model is designed to be:
            
              - Simple to use and understand for most users
              - Flexible enough to meet unexpected needs
            
              # Overview
            
              The `Status` message contains three pieces of data: error code, error message,
              and error details. The error code should be an enum value of
              [google.rpc.Code][google.rpc.Code], but it may accept additional error codes if needed.  The
              error message should be a developer-facing English message that helps
              developers *understand* and *resolve* the error. If a localized user-facing
              error message is needed, put the localized message in the error details or
              localize it in the client. The optional error details may contain arbitrary
              information about the error. There is a predefined set of error detail types
              in the package `google.rpc` which can be used for common error conditions.
            
              # Language mapping
            
              The `Status` message is the logical representation of the error model, but it
              is not necessarily the actual wire format. When the `Status` message is
              exposed in different client libraries and different wire protocols, it can be
              mapped differently. For example, it will likely be mapped to some exceptions
              in Java, but more likely mapped to some error codes in C.
            
              # Other uses
            
              The error model and the `Status` message can be used in a variety of
              environments, either with or without APIs, to provide a
              consistent developer experience across different environments.
            
              Example uses of this error model include:
            
              - Partial errors. If a service needs to return partial errors to the client,
                  it may embed the `Status` in the normal response to indicate the partial
                  errors.
            
              - Workflow errors. A typical workflow has multiple steps. Each step may
                  have a `Status` message for error reporting purpose.
            
              - Batch operations. If a client uses batch request and batch response, the
                  `Status` message should be used directly inside batch response, one for
                  each error sub-response.
            
              - Asynchronous operations. If an API call embeds asynchronous operation
                  results in its response, the status of those operations should be
                  represented directly using the `Status` message.
            
              - Logging. If some API errors are stored in logs, the message `Status` could
                  be used directly after any stripping needed for security/privacy reasons.
             </summary>
        </member>
        <member name="F:Google.Rpc.Status.CodeFieldNumber">
            <summary>Field number for the "code" field.</summary>
        </member>
        <member name="P:Google.Rpc.Status.Code">
            <summary>
             The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
            </summary>
        </member>
        <member name="F:Google.Rpc.Status.MessageFieldNumber">
            <summary>Field number for the "message" field.</summary>
        </member>
        <member name="P:Google.Rpc.Status.Message">
            <summary>
             A developer-facing error message, which should be in English. Any
             user-facing error message should be localized and sent in the
             [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
            </summary>
        </member>
        <member name="F:Google.Rpc.Status.DetailsFieldNumber">
            <summary>Field number for the "details" field.</summary>
        </member>
        <member name="P:Google.Rpc.Status.Details">
            <summary>
             A list of messages that carry the error details.  There will be a
             common set of message types for APIs to use.
            </summary>
        </member>
        <member name="T:Google.Type.ColorReflection">
            <summary>Holder for reflection information generated from google/type/color.proto</summary>
        </member>
        <member name="P:Google.Type.ColorReflection.Descriptor">
            <summary>File descriptor for google/type/color.proto</summary>
        </member>
        <member name="T:Google.Type.Color">
             <summary>
              Represents a color in the RGBA color space. This representation is designed
              for simplicity of conversion to/from color representations in various
              languages over compactness; for example, the fields of this representation
              can be trivially provided to the constructor of "java.awt.Color" in Java; it
              can also be trivially provided to UIColor's "+colorWithRed:green:blue:alpha"
              method in iOS; and, with just a little work, it can be easily formatted into
              a CSS "rgba()" string in JavaScript, as well. Here are some examples:
            
              Example (Java):
            
                   import com.google.type.Color;
            
                   // ...
                   public static java.awt.Color fromProto(Color protocolor) {
                     float alpha = protocolor.hasAlpha()
                         ? protocolor.getAlpha().getValue()
                         : 1.0;
            
                     return new java.awt.Color(
                         protocolor.getRed(),
                         protocolor.getGreen(),
                         protocolor.getBlue(),
                         alpha);
                   }
            
                   public static Color toProto(java.awt.Color color) {
                     float red = (float) color.getRed();
                     float green = (float) color.getGreen();
                     float blue = (float) color.getBlue();
                     float denominator = 255.0;
                     Color.Builder resultBuilder =
                         Color
                             .newBuilder()
                             .setRed(red / denominator)
                             .setGreen(green / denominator)
                             .setBlue(blue / denominator);
                     int alpha = color.getAlpha();
                     if (alpha != 255) {
                       result.setAlpha(
                           FloatValue
                               .newBuilder()
                               .setValue(((float) alpha) / denominator)
                               .build());
                     }
                     return resultBuilder.build();
                   }
                   // ...
            
              Example (iOS / Obj-C):
            
                   // ...
                   static UIColor* fromProto(Color* protocolor) {
                      float red = [protocolor red];
                      float green = [protocolor green];
                      float blue = [protocolor blue];
                      FloatValue* alpha_wrapper = [protocolor alpha];
                      float alpha = 1.0;
                      if (alpha_wrapper != nil) {
                        alpha = [alpha_wrapper value];
                      }
                      return [UIColor colorWithRed:red green:green blue:blue alpha:alpha];
                   }
            
                   static Color* toProto(UIColor* color) {
                       CGFloat red, green, blue, alpha;
                       if (![color getRed:&amp;red green:&amp;green blue:&amp;blue alpha:&amp;alpha]) {
                         return nil;
                       }
                       Color* result = [Color alloc] init];
                       [result setRed:red];
                       [result setGreen:green];
                       [result setBlue:blue];
                       if (alpha &lt;= 0.9999) {
                         [result setAlpha:floatWrapperWithValue(alpha)];
                       }
                       [result autorelease];
                       return result;
                  }
                  // ...
            
               Example (JavaScript):
            
                  // ...
            
                  var protoToCssColor = function(rgb_color) {
                     var redFrac = rgb_color.red || 0.0;
                     var greenFrac = rgb_color.green || 0.0;
                     var blueFrac = rgb_color.blue || 0.0;
                     var red = Math.floor(redFrac * 255);
                     var green = Math.floor(greenFrac * 255);
                     var blue = Math.floor(blueFrac * 255);
            
                     if (!('alpha' in rgb_color)) {
                        return rgbToCssColor_(red, green, blue);
                     }
            
                     var alphaFrac = rgb_color.alpha.value || 0.0;
                     var rgbParams = [red, green, blue].join(',');
                     return ['rgba(', rgbParams, ',', alphaFrac, ')'].join('');
                  };
            
                  var rgbToCssColor_ = function(red, green, blue) {
                    var rgbNumber = new Number((red &lt;&lt; 16) | (green &lt;&lt; 8) | blue);
                    var hexString = rgbNumber.toString(16);
                    var missingZeros = 6 - hexString.length;
                    var resultBuilder = ['#'];
                    for (var i = 0; i &lt; missingZeros; i++) {
                       resultBuilder.push('0');
                    }
                    resultBuilder.push(hexString);
                    return resultBuilder.join('');
                  };
            
                  // ...
             </summary>
        </member>
        <member name="F:Google.Type.Color.RedFieldNumber">
            <summary>Field number for the "red" field.</summary>
        </member>
        <member name="P:Google.Type.Color.Red">
            <summary>
             The amount of red in the color as a value in the interval [0, 1].
            </summary>
        </member>
        <member name="F:Google.Type.Color.GreenFieldNumber">
            <summary>Field number for the "green" field.</summary>
        </member>
        <member name="P:Google.Type.Color.Green">
            <summary>
             The amount of green in the color as a value in the interval [0, 1].
            </summary>
        </member>
        <member name="F:Google.Type.Color.BlueFieldNumber">
            <summary>Field number for the "blue" field.</summary>
        </member>
        <member name="P:Google.Type.Color.Blue">
            <summary>
             The amount of blue in the color as a value in the interval [0, 1].
            </summary>
        </member>
        <member name="F:Google.Type.Color.AlphaFieldNumber">
            <summary>Field number for the "alpha" field.</summary>
        </member>
        <member name="P:Google.Type.Color.Alpha">
             <summary>
              The fraction of this color that should be applied to the pixel. That is,
              the final pixel color is defined by the equation:
            
                pixel color = alpha * (this color) + (1.0 - alpha) * (background color)
            
              This means that a value of 1.0 corresponds to a solid color, whereas
              a value of 0.0 corresponds to a completely transparent color. This
              uses a wrapper message rather than a simple float scalar so that it is
              possible to distinguish between a default value and the value being unset.
              If omitted, this color object is to be rendered as a solid color
              (as if the alpha value had been explicitly given with a value of 1.0).
             </summary>
        </member>
        <member name="T:Google.Type.DateReflection">
            <summary>Holder for reflection information generated from google/type/date.proto</summary>
        </member>
        <member name="P:Google.Type.DateReflection.Descriptor">
            <summary>File descriptor for google/type/date.proto</summary>
        </member>
        <member name="T:Google.Type.Date">
            <summary>
             Represents a whole calendar date, e.g. date of birth. The time of day and
             time zone are either specified elsewhere or are not significant. The date
             is relative to the Proleptic Gregorian Calendar. The day may be 0 to
             represent a year and month where the day is not significant, e.g. credit card
             expiration date. The year may be 0 to represent a month and day independent
             of year, e.g. anniversary date. Related types are [google.type.TimeOfDay][google.type.TimeOfDay]
             and `google.protobuf.Timestamp`.
            </summary>
        </member>
        <member name="F:Google.Type.Date.YearFieldNumber">
            <summary>Field number for the "year" field.</summary>
        </member>
        <member name="P:Google.Type.Date.Year">
            <summary>
             Year of date. Must be from 1 to 9999, or 0 if specifying a date without
             a year.
            </summary>
        </member>
        <member name="F:Google.Type.Date.MonthFieldNumber">
            <summary>Field number for the "month" field.</summary>
        </member>
        <member name="P:Google.Type.Date.Month">
            <summary>
             Month of year. Must be from 1 to 12.
            </summary>
        </member>
        <member name="F:Google.Type.Date.DayFieldNumber">
            <summary>Field number for the "day" field.</summary>
        </member>
        <member name="P:Google.Type.Date.Day">
            <summary>
             Day of month. Must be from 1 to 31 and valid for the year and month, or 0
             if specifying a year/month where the day is not significant.
            </summary>
        </member>
        <member name="T:Google.Type.DayofweekReflection">
            <summary>Holder for reflection information generated from google/type/dayofweek.proto</summary>
        </member>
        <member name="P:Google.Type.DayofweekReflection.Descriptor">
            <summary>File descriptor for google/type/dayofweek.proto</summary>
        </member>
        <member name="T:Google.Type.DayOfWeek">
            <summary>
             Represents a day of week.
            </summary>
        </member>
        <member name="F:Google.Type.DayOfWeek.Unspecified">
            <summary>
             The unspecified day-of-week.
            </summary>
        </member>
        <member name="F:Google.Type.DayOfWeek.Monday">
            <summary>
             The day-of-week of Monday.
            </summary>
        </member>
        <member name="F:Google.Type.DayOfWeek.Tuesday">
            <summary>
             The day-of-week of Tuesday.
            </summary>
        </member>
        <member name="F:Google.Type.DayOfWeek.Wednesday">
            <summary>
             The day-of-week of Wednesday.
            </summary>
        </member>
        <member name="F:Google.Type.DayOfWeek.Thursday">
            <summary>
             The day-of-week of Thursday.
            </summary>
        </member>
        <member name="F:Google.Type.DayOfWeek.Friday">
            <summary>
             The day-of-week of Friday.
            </summary>
        </member>
        <member name="F:Google.Type.DayOfWeek.Saturday">
            <summary>
             The day-of-week of Saturday.
            </summary>
        </member>
        <member name="F:Google.Type.DayOfWeek.Sunday">
            <summary>
             The day-of-week of Sunday.
            </summary>
        </member>
        <member name="T:Google.Type.LatlngReflection">
            <summary>Holder for reflection information generated from google/type/latlng.proto</summary>
        </member>
        <member name="P:Google.Type.LatlngReflection.Descriptor">
            <summary>File descriptor for google/type/latlng.proto</summary>
        </member>
        <member name="T:Google.Type.LatLng">
             <summary>
              An object representing a latitude/longitude pair. This is expressed as a pair
              of doubles representing degrees latitude and degrees longitude. Unless
              specified otherwise, this must conform to the
              &lt;a href="http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf">WGS84
              standard&lt;/a>. Values must be within normalized ranges.
            
              Example of normalization code in Python:
            
                  def NormalizeLongitude(longitude):
                    """Wraps decimal degrees longitude to [-180.0, 180.0]."""
                    q, r = divmod(longitude, 360.0)
                    if r > 180.0 or (r == 180.0 and q &lt;= -1.0):
                      return r - 360.0
                    return r
            
                  def NormalizeLatLng(latitude, longitude):
                    """Wraps decimal degrees latitude and longitude to
                    [-180.0, 180.0] and [-90.0, 90.0], respectively."""
                    r = latitude % 360.0
                    if r &lt;= 90.0:
                      return r, NormalizeLongitude(longitude)
                    elif r >= 270.0:
                      return r - 360, NormalizeLongitude(longitude)
                    else:
                      return 180 - r, NormalizeLongitude(longitude + 180.0)
            
                  assert 180.0 == NormalizeLongitude(180.0)
                  assert -180.0 == NormalizeLongitude(-180.0)
                  assert -179.0 == NormalizeLongitude(181.0)
                  assert (0.0, 0.0) == NormalizeLatLng(360.0, 0.0)
                  assert (0.0, 0.0) == NormalizeLatLng(-360.0, 0.0)
                  assert (85.0, 180.0) == NormalizeLatLng(95.0, 0.0)
                  assert (-85.0, -170.0) == NormalizeLatLng(-95.0, 10.0)
                  assert (90.0, 10.0) == NormalizeLatLng(90.0, 10.0)
                  assert (-90.0, -10.0) == NormalizeLatLng(-90.0, -10.0)
                  assert (0.0, -170.0) == NormalizeLatLng(-180.0, 10.0)
                  assert (0.0, -170.0) == NormalizeLatLng(180.0, 10.0)
                  assert (-90.0, 10.0) == NormalizeLatLng(270.0, 10.0)
                  assert (90.0, 10.0) == NormalizeLatLng(-270.0, 10.0)
             </summary>
        </member>
        <member name="F:Google.Type.LatLng.LatitudeFieldNumber">
            <summary>Field number for the "latitude" field.</summary>
        </member>
        <member name="P:Google.Type.LatLng.Latitude">
            <summary>
             The latitude in degrees. It must be in the range [-90.0, +90.0].
            </summary>
        </member>
        <member name="F:Google.Type.LatLng.LongitudeFieldNumber">
            <summary>Field number for the "longitude" field.</summary>
        </member>
        <member name="P:Google.Type.LatLng.Longitude">
            <summary>
             The longitude in degrees. It must be in the range [-180.0, +180.0].
            </summary>
        </member>
        <member name="T:Google.Type.MoneyReflection">
            <summary>Holder for reflection information generated from google/type/money.proto</summary>
        </member>
        <member name="P:Google.Type.MoneyReflection.Descriptor">
            <summary>File descriptor for google/type/money.proto</summary>
        </member>
        <member name="T:Google.Type.Money">
            <summary>
             Represents an amount of money with its currency type.
            </summary>
        </member>
        <member name="F:Google.Type.Money.CurrencyCodeFieldNumber">
            <summary>Field number for the "currency_code" field.</summary>
        </member>
        <member name="P:Google.Type.Money.CurrencyCode">
            <summary>
             The 3-letter currency code defined in ISO 4217.
            </summary>
        </member>
        <member name="F:Google.Type.Money.UnitsFieldNumber">
            <summary>Field number for the "units" field.</summary>
        </member>
        <member name="P:Google.Type.Money.Units">
            <summary>
             The whole units of the amount.
             For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
            </summary>
        </member>
        <member name="F:Google.Type.Money.NanosFieldNumber">
            <summary>Field number for the "nanos" field.</summary>
        </member>
        <member name="P:Google.Type.Money.Nanos">
            <summary>
             Number of nano (10^-9) units of the amount.
             The value must be between -999,999,999 and +999,999,999 inclusive.
             If `units` is positive, `nanos` must be positive or zero.
             If `units` is zero, `nanos` can be positive, zero, or negative.
             If `units` is negative, `nanos` must be negative or zero.
             For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
            </summary>
        </member>
        <member name="T:Google.Type.TimeofdayReflection">
            <summary>Holder for reflection information generated from google/type/timeofday.proto</summary>
        </member>
        <member name="P:Google.Type.TimeofdayReflection.Descriptor">
            <summary>File descriptor for google/type/timeofday.proto</summary>
        </member>
        <member name="T:Google.Type.TimeOfDay">
            <summary>
             Represents a time of day. The date and time zone are either not significant
             or are specified elsewhere. An API may chose to allow leap seconds. Related
             types are [google.type.Date][google.type.Date] and `google.protobuf.Timestamp`.
            </summary>
        </member>
        <member name="F:Google.Type.TimeOfDay.HoursFieldNumber">
            <summary>Field number for the "hours" field.</summary>
        </member>
        <member name="P:Google.Type.TimeOfDay.Hours">
            <summary>
             Hours of day in 24 hour format. Should be from 0 to 23. An API may choose
             to allow the value "24:00:00" for scenarios like business closing time.
            </summary>
        </member>
        <member name="F:Google.Type.TimeOfDay.MinutesFieldNumber">
            <summary>Field number for the "minutes" field.</summary>
        </member>
        <member name="P:Google.Type.TimeOfDay.Minutes">
            <summary>
             Minutes of hour of day. Must be from 0 to 59.
            </summary>
        </member>
        <member name="F:Google.Type.TimeOfDay.SecondsFieldNumber">
            <summary>Field number for the "seconds" field.</summary>
        </member>
        <member name="P:Google.Type.TimeOfDay.Seconds">
            <summary>
             Seconds of minutes of the time. Must normally be from 0 to 59. An API may
             allow the value 60 if it allows leap-seconds.
            </summary>
        </member>
        <member name="F:Google.Type.TimeOfDay.NanosFieldNumber">
            <summary>Field number for the "nanos" field.</summary>
        </member>
        <member name="P:Google.Type.TimeOfDay.Nanos">
            <summary>
             Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
            </summary>
        </member>
    </members>
</doc>
